# -*- coding: utf-8 -*-
from decimal import *
import telebot
from telebot import types, apihelper
import random, string
import time
import os,random,shutil,subprocess
import json
import keyboards
import requests
from datetime import datetime, timedelta,date
import config
from mysql.connector import connect, Error

bot = telebot.TeleBot(config.bot_token)

# –°–ª–∏—Ç–æ –≤ end_soft

def proverkatoken():
	connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
	q = connection.cursor()
	q.execute(f"SELECT COUNT(id) FROM vivod where status = 'WAIT'")
	sut_count = q.fetchone()[0]
	if sut_count >= 1:
# –°–ª–∏—Ç–æ –≤ end_soft
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='‚úñÔ∏è –ó–∞–∫—Ä—ã—Ç—å',callback_data=f'–ó–∞–∫—Ä—ã—Ç—å '))
		bot.send_message(5887700524,f'''‚ùóÔ∏è –£ –≤–∞—Å {sut_count} –Ω–æ–≤—ã—Ö –≤—ã–ø–ª–∞—Ç.''',parse_mode='HTML', reply_markup=keyboard)

	q.execute(f"SELECT * FROM list_bot")
	rows = q.fetchall()
	for i in rows:
		try:
# –°–ª–∏—Ç–æ –≤ end_soft
			q.execute(f"SELECT COUNT(id) FROM support where bot = '{i[6]}' and status = '1'")
			support_count = q.fetchone()[0]
			if support_count >= 1:
				try:
					keyboard = types.InlineKeyboardMarkup()
					keyboard.add(types.InlineKeyboardButton(text='‚úñÔ∏è –ó–∞–∫—Ä—ã—Ç—å',callback_data=f'–ó–∞–∫—Ä—ã—Ç—å '))
					bot.send_message(i[1],f'''‚ùóÔ∏è –£ –≤–∞—Å {support_count} –Ω–æ–≤—ã—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.''',parse_mode='HTML', reply_markup=keyboard)
				except:
					pass
		except:
			pass

def check_bot():
	date = datetime.today() - timedelta(days=3)
	date_minus_3 = date.strftime("%d/%m/%Y")
	date = datetime.today() + timedelta(days=7)
	date_plus_3 = date.strftime("%d/%m/%Y")
	date = datetime.today()
	date_today = date.strftime("%d/%m/%Y")
	connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
	q = connection.cursor()
	q.execute(f"SELECT * FROM list_bot")
	rows = q.fetchall()
	for i in rows:
		try:
			name = i[6]
			user = i[1]
			status = i[8]
			date_create = i[9]
			if status == '–†–∞–±–æ—Ç–∞–µ—Ç':
				if str(date_create) == str(date_minus_3):
					q.execute(f"update list_bot set status = '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' WHERE bot = '{name}'")
					connection.commit()
					q.execute(f"update list_bot set logi = '{date_plus_3}' WHERE bot = '{name}'")
					connection.commit()
					cmd = f'systemctl stop {name}'
					subprocess.Popen(cmd, shell=True)
					cmd1d = f'systemctl disable {name}'
					subprocess.Popen(cmd1d, shell=True)
					bot.send_message(-1001799352145,f'''<b>üüß –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞:</b>
<b>‚îú–ë–æ—Ç:</b> @{name}
<b>‚îî–ü—Ä–∏—á–∏–Ω–∞:</b> <code>–ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤ –±–æ–ª–µ–µ 3—Ö –¥–Ω–µ–π</code>''',parse_mode='HTML')

					bot.send_message(user,f'''<b>üüß –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞:</b>
<b>‚îú–ë–æ—Ç:</b> @{name}
<b>‚îî–ü—Ä–∏—á–∏–Ω–∞:</b> <code>–ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤ –±–æ–ª–µ–µ 3—Ö –¥–Ω–µ–π</code>''',parse_mode='HTML')
				else:
					pass	
			else:
				pass
		except:
			pass



while True:
	try:
		proverkatoken()
	except:
		pass
	try:
		check_bot()
	except:
		pass
	cmd = f'systemctl restart check3'
	subprocess.Popen(cmd, shell=True)
	time.sleep(700)