# -*- coding: utf-8 -*-
from decimal import *
from email import message
import telebot
import datetime
from telebot import types, apihelper
import sqlite3
import random, string
import time
import os,random,shutil,subprocess
from subprocess import check_output
from telebot.apihelper import ApiTelegramException
import json
import keyboards
import requests
from datetime import datetime, timedelta
from datetime import date
from dateutil.relativedelta import relativedelta
import secrets
import hashlib
import config
from getpass import getpass
from mysql.connector import connect, Error
from time import time
from threading import Thread
import threading
from threading import Timer
import time
import os,random,shutil,subprocess
import json
import urllib.request


# –°–ª–∏—Ç–æ –≤ end_soft
bot = telebot.TeleBot(config.bot_token)
bot_name = 'Smm_Hermes_bot'

admin2 = -1001799352145

def spam(user):
	connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
	q = connection.cursor()
	date = datetime.today()
	date = date.strftime("%H:%M")
	q.execute("INSERT INTO spam (user,data) VALUES ('%s','%s')"%(user,date))
	connection.commit()
	q.execute(f"SELECT COUNT(id) FROM spam where user = '{user}'")
	message_count = q.fetchone()[0]
	if int(message_count) == 10:
		bot.send_message(user, '<b>‚ùóÔ∏è –ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞ –∞–Ω–æ–º–∞–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, –µ—Å–ª–∏ –≤—ã –Ω–µ –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç–µ —Å–ø–∞–º, –≤—ã –±—É–¥–µ—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã.</b>',parse_mode='HTML')
	elif int(message_count) == 30:
		q.execute(f"update ugc_users set status = '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' WHERE id = '{user}' and bot = '{bot_name}'")
		connection.commit()
		bot.send_message(user, '<b>‚ùóÔ∏è –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã, –¥–ª—è —Å–Ω—è—Ç–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.</b>',parse_mode='HTML')
	else:
		q.execute(f"DELETE FROM spam where data != '{date}'")
		connection.commit()
		

# –°–ª–∏—Ç–æ –≤ end_soft


@bot.message_handler(commands=['start'])
def start_message(message):
		if message.chat.type == 'private':
			spam(message.chat.id)
			connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
			q = connection.cursor()
			q.execute(f'SELECT * FROM ugc_users WHERE id = "{message.chat.id}" and bot = "{bot_name}"')
			row = q.fetchall()
			if str(row) == '[]':
				tomorrow = datetime.now()
				data = tomorrow.strftime('%d/%m/%Y')
				q.execute("INSERT INTO ugc_users (id,bot,data,status) VALUES ('%s','%s','%s','%s')"%(message.chat.id,bot_name,data,'–ê–∫—Ç–∏–≤–µ–Ω'))
				connection.commit()
				if message.text[7:] != '' and message.text[7:] != message.chat.id:
					q.execute(f'SELECT * FROM promo WHERE name = "{message.text[7:]}"')
					rows = q.fetchall()
					if len(rows) >= 1:
						q.execute(f"update promo set coolvo = coolvo + 1 where name = '{message.text[7:]}'")
						connection.commit()
						bot.send_message(-1001799352145,f'''@{message.from_user.username} | {message.text[7:]}''')
					else:
						try:
							q.execute(f"update ugc_users set ref = '{message.text[7:]}' where id = {message.chat.id} and bot = '{bot_name}'")
							connection.commit()
							keyboard = types.InlineKeyboardMarkup()
							keyboard.add(types.InlineKeyboardButton(text='‚úñÔ∏è –ó–∞–∫—Ä—ã—Ç—å',callback_data=f'–ó–∞–∫—Ä—ã—Ç—å '))
							bot.send_message(message.text[7:], f'‚ûï –ù–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª: @{message.from_user.username}',reply_markup=keyboard)	
						except:
							pass
				keyboard = types.InlineKeyboardMarkup()
				keyboard.add(types.InlineKeyboardButton(text='‚ÜóÔ∏è –ö–∞–∫ –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å',url=f'https://telegra.ph/XA·ààVA--SMM-FRANCHISE--Navigaciya-po-menyu-04-15 '))
				bot.send_message(message.chat.id,'''üî• –•–æ—á–µ—à—å –≤—ã—É—á–∏—Ç—å –∫–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å  –ø–∞—Å—Å–∏–≤–Ω—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –∏ –≤—ã–π—Ç–∏ –Ω–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é –ø—Ä–∏–±—ã–ª—å –±–µ–∑ –∑–∞—Ç—Ä–∞—Ç, –≤—Ä–µ–º–µ–Ω–∏ –∏ —Å—Ä–µ–¥—Å—Ç–≤? 

‚ùóÔ∏è –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–π:''',disable_web_page_preview = True,parse_mode='HTML' ,reply_markup=keyboard)
			q.execute(f"SELECT status FROM ugc_users where id = '{message.chat.id}' and bot = '{bot_name}'")
			if message.text[7:] ==  'support':
				msg = bot.send_message(message.chat.id, f'''<b>üÜò –í–Ω–∏–º–∞–Ω–∏–µ:
‚îú</b><i>–ò–Ω–æ–≥–¥–∞ –æ—Ç–≤–µ—Ç –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 6 —á–∞—Å–æ–≤, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–≥—Ä—É–∑–∫–∏.</i>
<b>‚îú</b><i>–° –≤–æ–ø—Ä–æ—Å–æ–º –æ –≤—ã–≤–æ–¥–µ —Å—Ä–µ–¥—Å—Ç–≤ –ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –Ω–µ—Ç —Å–º—ã—Å–ª–∞, —Ç–∞–∫ –∫–∞–∫ –≤—ã–≤–æ–¥ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–æ. –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ —É–∫–∞–∑–∞–Ω–∏–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–ª–Ω–æ–º–µ—Ä–Ω—ã–π –≤–æ–∑–≤—Ä–∞—Ç.</i>
<b>‚îî‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –Ω–∞–º:</b>''',parse_mode='HTML', reply_markup=keyboards.otmena)
				bot.register_next_step_handler(msg, supportadd, msg.message_id)
			else:
				bot.send_message(message.chat.id,'''<b>üëë –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ª—É—á—à–∏–π —Å–µ—Ä–≤–∏—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞.</b>''',disable_web_page_preview = True,parse_mode='HTML' ,reply_markup=keyboards.main)

			
# –°–ª–∏—Ç–æ –≤ end_soft

# def capcha(message,msg_id):
# 		spam(message.chat.id)
# 		if message.text.lower() == 'Simpsonfather.ru':
# 			keyboard = types.InlineKeyboardMarkup()
# 			keyboard.add(types.InlineKeyboardButton(text='‚ÜóÔ∏è –ö–∞–∫ –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å',url=f'https://telegra.ph/XA·ààVA--SMM-FRANCHISE--Navigaciya-po-menyu-04-15 '))
# 			bot.send_message(message.chat.id,'''üî• –•–æ—á–µ—à—å –≤—ã—É—á–∏—Ç—å –∫–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å  –ø–∞—Å—Å–∏–≤–Ω—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –∏ –≤—ã–π—Ç–∏ –Ω–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é –ø—Ä–∏–±—ã–ª—å –±–µ–∑ –∑–∞—Ç—Ä–∞—Ç, –≤—Ä–µ–º–µ–Ω–∏ –∏ —Å—Ä–µ–¥—Å—Ç–≤? 

# ‚ùóÔ∏è–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–π:''',disable_web_page_preview = True,parse_mode='HTML' ,reply_markup=keyboard)
# 			bot.send_message(message.chat.id,'''<b>üëë –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ª—É—á—à–∏–π —Å–µ—Ä–≤–∏—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞.</b>''',disable_web_page_preview = True,parse_mode='HTML' ,reply_markup=keyboards.main)
# 		else:
# 			photo = 'https://i.imgur.com/AyRbtQn.jpg'
# 			msg = bot.send_photo(message.chat.id,photo, '''<b>üî∞ –ü—Ä–æ–π–¥–∏—Ç–µ –∫–∞–ø—á—É:
# ‚îî</b><i>–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç:</i> <code>Simpsonfather.ru</code>''',parse_mode='HTML')
# 			bot.register_next_step_handler(msg, capcha,msg.message_id)



#def check_spam(user_id):
#    if spam[user_id][1] == 0:
#        spam[user_id] = [datetime.now(), 1]
#    elif spam[user_id][1] == 20:
#        if datetime.now() - spam[user_id][0] < datetime.minute:
#            punishing_the_spammer()
#        else:
#            spam[user_id][1] == 0
#            spam[user_id][0] = datetime.now()
#    else:
#        spam[user_id][1] = spam[user_id][1] + 1

@bot.message_handler(content_types=['text'])
def send_text(message):
	msg = message.text
	if message.chat.type == 'private':
		if message.text == 'ü§ñ –ú–æ–∏ –±–æ—Ç—ã':
			connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
			q = connection.cursor()
			keyboard = types.InlineKeyboardMarkup()
			q.execute(f"SELECT * FROM list_bot where user = '{message.chat.id}'")
			rows = q.fetchall()
			if len(rows) != 0:
				for i in rows:
					keyboard.add(types.InlineKeyboardButton(text=i[2],callback_data=f'bot_ {i[0]}'))
			else:
				keyboard.add(types.InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç',callback_data=f'add_bot'))	
			bot.send_message(message.chat.id, f'''<b>ü§ñ –°–ø–∏—Å–æ–∫ –±–æ—Ç–æ–≤:
‚îî–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –±–æ—Ç:</b>''',parse_mode='HTML', reply_markup=keyboard)


# –°–ª–∏—Ç–æ –≤ end_soft
		elif message.text == 'üíº –ü—Ä–æ—Ñ–∏–ª—å':
			connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
			q = connection.cursor()
			q.execute(f"SELECT COUNT(id) FROM list_bot where user = '{message.chat.id}'")
			botov = q.fetchone()[0]
			q.execute(f"SELECT SUM(dohod) FROM list_bot where user = '{message.chat.id}'")
			dohod = q.fetchone()[0]
			print(dohod)
			if dohod == None:
				dohod = 0
			q.execute(f"SELECT SUM(balance) FROM list_bot where user = '{message.chat.id}'")
			balance = q.fetchone()[0]
			if balance == None:
				balance = 0
			print(balance)	
			keyboard = types.InlineKeyboardMarkup()	
			keyboard.add(types.InlineKeyboardButton(text='üì§ –í—ã–≤–µ—Å—Ç–∏',callback_data=f'–í—ã–≤–æ–¥ '))	
			keyboard.add(types.InlineKeyboardButton(text='üéÅ –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–æ',callback_data=f'–ü—Ä–æ–º–æ '))
			keyboard.add(types.InlineKeyboardButton(text='ü´Ç –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞',callback_data=f'–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è '))		
			bot.send_message(message.chat.id, f'''<b>üé© –õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</b>
<b>‚îúID:</b> <code>{message.chat.id}</code>
<b>‚îúUN:</b> <code>{message.chat.username}</code>
<b>‚îî–ë–æ—Ç–æ–≤:</b> <code>{botov}</code>

<b>ü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –±–æ—Ç–∞–º:
‚îú–î–æ—Ö–æ–¥:</b> <code>{dohod} RUB</code>
<b>‚îî–ë–∞–ª–∞–Ω—Å:</b> <code>{balance} RUB</code>
''',parse_mode='HTML', reply_markup=keyboard)


# –°–ª–∏—Ç–æ –≤ end_soft
		elif message.text == 'üìú –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
			keyboard = types.InlineKeyboardMarkup()	
			keyboard.add(types.InlineKeyboardButton(text='üí¨ –ê–¥–º–∏–Ω —á·¥Ä·¥õ',url=f'https://t.me/+XT1onfxdBMhkMjc6'),types.InlineKeyboardButton(text='üì∞ –ù–æ–≤–æ—Å—Ç–∏',url=f'https://t.me/+Off-KW3R3gk4ZjEy'))
			keyboard.add(types.InlineKeyboardButton(text='üßû –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ & –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',url=f'https://telegra.ph/XA·ààVA--SMM-FRANCHISE--Navigaciya-po-menyu-04-15 '))
			keyboard.add(types.InlineKeyboardButton(text=' üßë‚Äçüîß –ü–æ–¥–¥–µ—Ä–∂–∫–∞ ·¥Ñ·¥á·¥© ô–∏·¥Ñ·¥Ä',callback_data=f'support'))
			bot.send_message(message.chat.id, '''<b>üìú –ü–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ –º—ã?
‚îú</b><i>–ù–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ —è–≤–ª—è–µ—Ç—Å—è —Å–∞–º—ã–º –Ω–∞–¥–µ–∂–Ω—ã–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º –Ω–∞–∫—Ä—É—Ç–∫–∏ —Ç–∞–∫–∏—Ö —Å–æ—Ü —Å–µ—Ç–µ–π, –∫–∞–∫ Instagram, Vk, TikTok –∏ Youtube, –∞ —Ç–∞–∫ –∂–µ –∏ –ø—Ä–æ—á–∏—Ö —É—Å–ª—É–≥. </i>
<b>‚îî</b><i>–¶–µ–Ω—ã –≤ –±–æ—Ç–µ –±—É–¥—É—Ç –Ω–∏–∂–µ —Ä—ã–Ω–æ—á–Ω—ã—Ö –∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª—å –Ω–µ —Å–º–æ–∂–µ—Ç –ø—Ä–æ–π—Ç–∏ –º–∏–º–æ –ø–æ–∫—É–ø–∫–∏ –∏–º–µ–Ω–Ω–æ —É —Ç–µ–±—è!</i>

<b>üí∞ –ú—ã –∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ:</b>
<b>‚îú</b><i>–ü–æ–º–æ–∂–µ–º –≤–∞–º –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–≤–æ–π —Å–µ—Ä–≤–∏—Å –Ω–∞–∫—Ä—É—Ç–∫–∏ –∏ –º–∞–≥–∞–∑–∏–Ω.</i>
<b>‚îú</b><i>–ù–∞—É—á–∏–º –≤–∞—Å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å.</i>
<b>‚îú</b><i>–°–¥–µ–ª–∞–µ–º –±–æ—Ç–∞ –≤–∞—à–∏–º –æ—Å–Ω–æ–≤–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º –¥–æ—Ö–æ–¥–∞ –≤ —Ç–µ—á–µ–Ω–∏–∏ –Ω–µ–¥–µ–ª–∏! </i>
<b>‚îî</b><i>–ú—ã –ª—é–±–∏–º –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, —Ä–æ–≤–Ω–æ —Ç–∞–∫ –∂–µ, –∫–∞–∫ –∏ —Ç—ã!</i>

<b>üöÄ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤ –¥–≤–∞ –∫–ª–∏–∫–∞::
‚îî</b><i>–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞ –≤–∞–º –≤—Å–µ–≥–æ –ª–∏—à—å –Ω–∞–¥–æ –≤–∑—è—Ç—å —Ç–æ–∫–µ–Ω —É <a href="https://t.me/BotFather">BotFather</a> –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ –Ω–∞–º!</i>

<b>‚ö°Ô∏è –û—â—É—Ç–∏—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ:
‚îî</b><i>–í–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞–∫—Ä—É—Ç–∫–∏ –∏ –ø—Ä–æ–¥–∞–∂ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω, –Ω–µ –Ω—É–∂–Ω–æ –Ω–∏ –æ —á—ë–º –±–µ—Å–ø–æ–∫–æ–∏—Ç—å—Å—è. –ó–∞–Ω–∏–º–∞–π—Ç–µ—Å—å –ª—é–±–∏–º—ã–º–∏ –¥–µ–ª–∞–º–∏, –ø–æ–∫–∞ –≤–∞—à –±–æ—Ç –±—É–¥–µ—Ç –ø–∞—Å—Å–∏–≤–Ω–æ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å!</i>''' ,parse_mode='HTML',reply_markup=keyboard,disable_web_page_preview = True)

		else:
			bot.send_message(message.chat.id, '<b>‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ, –≤–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ, –±—ã–ª–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!</b>',parse_mode='HTML', reply_markup=keyboards.main)
	else:
		pass	

def support_otvet(message,idsup,msg_id):
	bot.delete_message(message.chat.id,message.message_id)
	if message.text.lower() != '–æ—Ç–º–µ–Ω–∞':
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute(f"SELECT * FROM support where id = '{idsup}'")
		row = q.fetchone()
		q.execute(f"update support set status = '0' where id = '{idsup}'")
		connection.commit()
		texts = F'''{row[2]}
‚îî[S]<code>{message.text}</code>'''
		q.execute(f"update support set text = '{texts}' where id = '{idsup}'")
		connection.commit()
		q.execute(f"SELECT bot_token FROM list_bot where bot = '{row[4]}' ")
		bot_token = q.fetchone()[0]
		bots = telebot.TeleBot(bot_token)
		admin = config.admin
		try:
			bots.send_message(row[1], f'<b>‚ùóÔ∏è –û—Ç–≤–µ—Ç –æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏:</b> <code>{message.text}</code>',parse_mode='HTML')
		except:
			pass
		bot.send_message(message.chat.id, '<b>–£—Å–ø–µ—à–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏</b>',parse_mode='HTML', reply_markup=keyboards.main)
	else:
		bot.send_message(message.chat.id, '<b>–û—Ç–º–µ–Ω–∏–ª–∏</b>',parse_mode='HTML', reply_markup=keyboards.main)

def poisk_user(message,bot_id,msg_id):
	bot.delete_message(message.chat.id,message.message_id)

	if message.text.lower() != '–æ—Ç–º–µ–Ω–∞':
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute(f"SELECT * FROM list_bot where id = '{bot_id}'")
		rows = q.fetchone()
		bot_name = rows[6]
		q.execute(f"SELECT * FROM ugc_users where id = '{message.text}'and bot = '{bot_name}' ")
		row = q.fetchone()
		bot.send_message(message.chat.id, '<b>üîç –ò—â–µ–º...</b>',parse_mode='HTML')
		if row != None:
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å | –†–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å',callback_data=f'–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å_ {bot_name} {row[0]}'))
			keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–±–æ—Ç '))	
			msg = bot.send_message(message.chat.id, f'''<b>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b>
<b>‚îúID:</b> <code>{row[0]}</code>
<b>‚îú–ë–∞–ª–∞–Ω—Å:</b> <code>{row[6]}</code>
<b>‚îî–°—Ç–∞—Ç—É—Å:</b> <code>{row[3]}</code>
''',parse_mode='HTML',reply_markup=keyboard)
		else:
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–±–æ—Ç '))	
			bot.send_message(message.chat.id, '<b>ü§î –ù–µ—Ç —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.</b>',parse_mode='HTML', reply_markup=keyboard)
	else:
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–±–æ—Ç '))	
		bot.send_message(message.chat.id, '<b>ü§î –û—Ç–º–µ–Ω–∏–ª–∏.</b>',parse_mode='HTML', reply_markup=keyboard)

def generator_pw():
    pwd =  string.digits
    return "".join(random.choice(pwd) for x in range(random.randint(10, 16)))

def btc_oplata_1(message):
    try:
        if int(message.text) >= int(1):
            url = f'https://h159987.srv16.test-hf.su/merchant?amount={message.text}&shop_id=66&label=6&hash=97f7a6f60c98c3778d84a9d14b645b2891e9b747c217aafb16cc7df85669ab9d'
            keyboard = types.InlineKeyboardMarkup()
            keyboard.add(types.InlineKeyboardButton(text=f'''‚ÜóÔ∏è –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ ''',url=url))
            keyboard.add(types.InlineKeyboardButton(text=f'''ü¶ã–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂''',callback_data=f'check_opl'))
            keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'–ö–∞–±–∏–Ω–µ—Ç '))
            bot.send_message(message.chat.id, '''‚ùóÔ∏è –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ  –Ω–∏–∂–µ –∏ –æ–ø–ª–∞—Ç–∏—Ç–µ —Å—á–µ—Ç —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º !

            üí° –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å.''', reply_markup=keyboard)
        else:
            keyboard = types.InlineKeyboardMarkup()
            keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'–ø—Ä–æ—Ñ–∏–ª—å '))
            bot.send_message(message.chat.id, f'‚ùóÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è 10 RUB',parse_mode='HTML', reply_markup=keyboards.main)
    except Exception as e:
        print(e)
def edit_procent(message,bot_id,msg_id):
	bot.delete_message(message.chat.id,message.message_id)
	bot.delete_message(message.chat.id,msg_id)
	if message.text != '–û—Ç–º–µ–Ω–∞':
		if message.text.isdigit() == True:
			connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
			q = connection.cursor()
			q.execute(f"update list_bot set prace = '{message.text}' where id = '{bot_id}'")
			connection.commit()
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'bot_ {bot_id}'))
			bot.send_message(message.chat.id, f'‚úîÔ∏è –ù–∞—Ü–µ–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞, —Ç–µ–ø–µ—Ä—å –≤–∞—à –¥–æ—Ö–æ–¥ –±—É–¥–µ—Ç —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å {message.text} % –æ—Ç —Ü–µ–Ω—ã —É—Å–ª—É–≥.', reply_markup=keyboard)
		else:
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'bot_ {bot_id}'))
			bot.send_message(message.chat.id, '‚úñÔ∏è –û—à–∏–±–∫–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑—ã–≤–∞—Ç—å —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.', reply_markup=keyboard)

	else:
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'bot_ {bot_id}'))
		bot.send_message(message.chat.id, '‚úñÔ∏è –û—Ç–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è......', reply_markup=keyboards.main)


def edit_sms(message,bot_id,msg_id):
	bot.delete_message(message.chat.id,message.message_id)
	bot.delete_message(message.chat.id,msg_id)
	if message.text != '–û—Ç–º–µ–Ω–∞':
		if message.text.isdigit() == True:
			connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
			q = connection.cursor()
			q.execute(f"update list_bot set sms = '{message.text}' where id = '{bot_id}'")
			connection.commit()
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'bot_ {bot_id}'))
			bot.send_message(message.chat.id, f'‚úîÔ∏è –ù–∞—Ü–µ–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞.', reply_markup=keyboard)
		else:
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'bot_ {bot_id}'))
			bot.send_message(message.chat.id, '‚úñÔ∏è –û—à–∏–±–∫–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑—ã–≤–∞—Ç—å —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.', reply_markup=keyboard)

	else:
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'bot_ {bot_id}'))
		bot.send_message(message.chat.id, '‚úñÔ∏è –û—Ç–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è......', reply_markup=keyboards.main)


def add_bot(message,msg_id):
	msd = bot.send_message(message.chat.id, '‚è≥ –ò–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ....', reply_markup=keyboards.main)
	if message.text != '–û—Ç–º–µ–Ω–∞':
		try:
			bot_create = telebot.TeleBot(message.text)
			user = message.chat.id
			name = bot_create.get_me().username
			balance = 0
			info = '–¢–µ–∫—Å—Ç'
			prace = 10
			bots = bot_create.get_me().username.lower()
			bot_token = message.text
			status = '–†–∞–±–æ—Ç–∞–µ—Ç'
			tomorrow = datetime.now()
			data = tomorrow.strftime('%d/%m/%Y')
			logi = data
			current_dir = os.getcwd()
			path = f'{current_dir}/bot_list/{bots}'
			os.makedirs(path, exist_ok=True)
			
			src = f'{current_dir}/bot/main.py'
			shutil.copy(src, path ,follow_symlinks=True)
			src = f'{current_dir}/bot/keyboards.py'
			shutil.copy(src, path ,follow_symlinks=True)
			
			my_file = open(f"{bots}.service", "a+")
			my_file.write(f'''[Unit]
Description={bots}
After=syslog.target
After=network.target

[Service]
Type=simple
User=root
WorkingDirectory={current_dir}/bot_list/{bots}
ExecStart=/usr/bin/python3 {current_dir}/bot_list/{bots}/main.py
RestartSec=10
Restart=always

[Install]
WantedBy=multi-user.target''')
			my_file.close()
			src = f'{current_dir}/{bots}.service'
			print(current_dir)
			shutil.copy(src, '/etc/systemd/system/' ,follow_symlinks=True)
			print(path)
			path = os.path.join(os.path.abspath(os.path.dirname(__file__)), f'{bots}.service')
			print(path)
			os.remove(path)
			connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
			q = connection.cursor()
			q.execute("INSERT INTO list_bot (user,name,balance,info,prace,bot,bot_token,status,logi,dohod,deposit) VALUES ('%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s')"%(user,name,balance,info,prace,bots,bot_token,status,logi,0,0))
			connection.commit()
			cmd1 = f'systemctl start {bots}'
			print(cmd1)
			subprocess.Popen(cmd1, shell=True)
			cmd = f'systemctl enable {bots}'
			print(cmd)
			subprocess.Popen(cmd, shell=True)
			cmdss = f'systemctl daemon-reload'
			print(cmdss)
			subprocess.Popen(cmdss, shell=True)

			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞',callback_data=f'–±–æ—Ç '))
			keyboard.add(types.InlineKeyboardButton(text='üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏',url=f'https://telegra.ph/XA·ààVA--SMM-FRANCHISE--Navigaciya-po-menyu-04-15 '))
			bot.send_message(message.chat.id, f'''–ë–æ—Ç @{bots}, —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ <a href="t.me/Smm_Hermes_bot">Smm_Hermes_bot</a>.''',parse_mode='HTML', reply_markup=keyboard)
			bot.send_message(-1001799352145,f'''<b>üü© –ù–æ–≤—ã–π –±–æ—Ç:</b>
<b>‚îú–ë–æ—Ç:</b> @{name}
<b>‚îîUSER:</b> @{message.chat.username}''',parse_mode='HTML')
		except Exception as e:
			print(e)
	else:
		bot.send_message(message.chat.id, '‚úñÔ∏è –í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é.', reply_markup=keyboards.main)

def addkeyboards(message,idbots):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		txtkey = message.text
		msg = bot.send_message(message.chat.id, "<b>‚úçÔ∏è –£–∫–∞–∂–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–Ω–æ–ø–∫–∏:</b>",parse_mode='HTML', reply_markup=keyboards.main)
		bot.register_next_step_handler(msg, addkeyboards1, idbots,txtkey)
	else:
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'bot_ {idbots}'))
		bot.send_message(message.chat.id, '‚úñÔ∏è –û—Ç–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è......', reply_markup=keyboards.main)

def addkeyboards1(message,idbots,txtkey):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute("INSERT INTO keyboards (name,text,bot) VALUES ('%s','%s','%s')"%(txtkey,message.text,idbots))
		connection.commit()
		cmd1 = f'systemctl restart {idbots}'
		subprocess.Popen(cmd1, shell=True)
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–±–æ—Ç '))
		bot.send_message(message.chat.id, f'''‚úîÔ∏è –ö–Ω–æ–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞.''', reply_markup=keyboard)
	else:
		bot.send_message(message.chat.id, '‚úñÔ∏è –í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=keyboards.main)

def generator_id():
    pwd =  string.digits
    return "".join(random.choice(pwd) for x in range(random.randint(9, 29)))

def generator_id1():
    pwd =  string.digits
    return "".join(random.choice(pwd) for x in range(random.randint(9, 29)))


def is_subscribed(user_id):
	try:
		status = ['creator', 'administrator', 'member','restricted']
		for i in status:
			if i == bot.get_chat_member(-735045317, user_id).status:
				return True
	except ApiTelegramException as e:
		if e.result_json['description'] == 'Bad Request: user not found':
			return False

def add_ref_balance(user,summa):
	connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
	q = connection.cursor()
	q.execute(f'select ref from ugc_users where id = "{user}" and bot = "{bot_name}"')
	ref_user = q.fetchone()[0]
	if ref_user != None:
		add_deposit = int(summa) / 100 * 10
		q.execute(f"update ugc_users set balance = balance + '{add_deposit}' where id = '{ref_user}' and bot = '{bot_name}'")
		connection.commit()
		q.execute(f"update ugc_users set ref = '{add_deposit}' where id = '{ref_user}' and bot = '{bot_name}'")
		connection.commit()
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'''‚úñÔ∏è –ó–∞–∫—Ä—ã—Ç—å''',callback_data=f'–ó–∞–∫—Ä—ã—Ç—å '))
		try:
			bot.send_message(ref_user, f'''<b>üí∞ –ù–æ–≤—ã–π –≤—ã–≤–æ–¥ —Ä–µ—Ñ–µ—Ä–∞–ª–∞:</b> <code>{user}</code> <b>| –î–æ—Ö–æ–¥:</b> <code>{add_deposit}</code> <b>RUB</b>''',parse_mode='HTML',reply_markup=keyboard, disable_web_page_preview=True)
		except:
			pass
	else:
		pass

def addpromo(message,metod):
	try:
		if message.text != '–û—Ç–º–µ–Ω–∞':
			if message.text.isdigit() == True:
				if int(message.text) >= int(1):
					summa = message.text
					msg = bot.send_message(message.chat.id, f'''‚úçÔ∏è <b>–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:</b>''',parse_mode='HTML', reply_markup=keyboards.otmena)
					bot.register_next_step_handler(msg, addpromo1, metod, summa)
				else:
					bot.send_message(message.chat.id, '''‚úñÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ 1 RUB.''', parse_mode='HTML',reply_markup=keyboards.main)
			else:
				bot.send_message(message.chat.id, '''‚úñÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ 1 RUB.''', parse_mode='HTML',reply_markup=keyboards.main)
		else:
			bot.send_message(message.chat.id, '‚úñÔ∏è –í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',reply_markup=keyboards.main)
	except:
		bot.send_message(message.chat.id, '''‚úñÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ 1 RUB.''', parse_mode='HTML',reply_markup=keyboards.main)

def addpromo1(message,metod,summa):
	try:
		if message.text != '–û—Ç–º–µ–Ω–∞':
			if message.text.isdigit() == True:
				if float(message.text) >= float(1):
					colvo = message.text
					print(summa)
					print(colvo)
					minusbalance = int(summa) * int(colvo)
					if metod == 'referal':
						connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
						q = connection.cursor()
						q.execute(f'SELECT * FROM ugc_users WHERE id = "{message.chat.id}" and bot = "{bot_name}"')
						rows = q.fetchone()
						if float(rows[1]) >= float(minusbalance):
							q.execute(f"update ugc_users set balance = balance - '{float(minusbalance)}' where id = '{message.chat.id}' and bot = '{bot_name}'")
							connection.commit()
							promo = secrets.token_urlsafe(7)
							q.execute("INSERT INTO cupon (name,summa,colvo,user) VALUES ('%s','%s','%s','%s')"%(promo,summa,colvo,'None'))
							connection.commit()
							bot.send_message(message.chat.id, f'''<b>üéÅ –ü—Ä–æ–º–æ–∫–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω:</b>
<b>‚îú–°—É–º–º–∞:</b> <code>{summa}</code>
<b>‚îú–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</b> <code>{colvo}</code>
<b>‚îî–ù–∞–∑–≤–∞–Ω–∏–µ:</b> <code>{promo}</code>''', parse_mode='HTML',reply_markup=keyboards.main)

						else:
							bot.send_message(message.chat.id, '''‚úñ
# –°–ª–∏—Ç–æ –≤ end_soft''', parse_mode='HTML',reply_markup=keyboards.main)

# –°–ª–∏—Ç–æ –≤ end_soft
					else:
						connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
						q = connection.cursor()
						q.execute(f"SELECT SUM(balance) FROM list_bot where user = '{message.chat.id}'")
						balance = q.fetchone()[0]
						if float(balance) >= float(minusbalance):
							q.execute(f"update list_bot set balance = balance - '{float(minusbalance)}' where bot = '{metod}'")
							connection.commit()
							promo = secrets.token_urlsafe(7)
							q.execute("INSERT INTO cupon (name,summa,colvo,user) VALUES ('%s','%s','%s','%s')"%(promo,summa,colvo,'None'))
							connection.commit()
							bot.send_message(message.chat.id, f'''<b>üéÅ –ü—Ä–æ–º–æ–∫–æ–¥ 
# –°–ª–∏—Ç–æ –≤ end_soft —Å–æ–∑–¥–∞–Ω:</b>
<b>‚îú–°—É–º–º–∞:</b> <code>{summa}</code>
<b>‚îú–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</b> <code>{colvo}</code>
<b>‚îî–ù–∞–∑–≤–∞–Ω–∏–µ:</b> <code>{promo}</code>''', parse_mode='HTML',reply_markup=keyboards.main)

						else:
							bot.send_message(message.chat.id, '''‚úñÔ∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.''', parse_mode='HTML',reply_markup=keyboards.main)
				else:
					bot.send_message(message.chat.id, '''‚úñÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ 1.''', parse_mode='HTML',reply_markup=keyboards.main)
			else:
				bot.send_message(message.chat.id, '''‚úñÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ 1.''', parse_mode='HTML',reply_markup=keyboards.main)
		else:
			bot.send_message(message.chat.id, '‚úñÔ∏è –í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',reply_markup=keyboards.main)
	except:
		bot.send_message(message.chat.id, '''‚úñÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ 1.''', parse_mode='HTML',reply_markup=keyboards.main)
def vivod(message,method,botsname,msg_id):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		if message.text.isdigit() == True:
				connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
				q = connection.cursor()
				q.execute(f"SELECT * FROM list_bot WHERE bot = '{botsname}'")
				check_balans = q.fetchone()
				if botsname != 'referal':
					if float(check_balans[3]) >= float(10):
						if str(method) == str('CARD'):
							if float(check_balans[3]) >= float(200):
								q.execute(f"update list_bot set balance ='0' where bot = '{botsname}'")
								connection.commit()
								q.execute("INSERT INTO vivod (bot,user,method,summa,rekvizit,status) VALUES ('%s', '%s', '%s', '%s', '%s', '%s')"%(botsname,message.chat.id,method,check_balans[3],message.text,'WAIT'))
								connection.commit()
								keyboard = types.InlineKeyboardMarkup()
								q.execute(f"SELECT MAX(id) FROM vivod")
								maxid = q.fetchone()[0]
								keyboard.add(types.InlineKeyboardButton(text='üîì –°—Ç–∞—Ç—É—Å –≤—ã–ø–ª–∞—Ç—ã',callback_data=f'–£–∑–Ω–∞—Ç—å—Å—Ç–∞—Ç—É—Å {maxid}'))
								bot.send_message(-1001695154512, f'''<b>‚úÖ –ù–æ–≤–∞—è –≤—ã–ø–ª–∞—Ç–∞:</b>
<b>‚îú–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> <code>{message.chat.id}</code>
<b>‚îî–°—É–º–º–∞:</b> <code>{check_balans[3]} RUB</code>
<b>–±–æ—Ç:</b> <code>{botsname}</code>
''', parse_mode='HTML', reply_markup=keyboard)
								bot.send_message(message.chat.id, '''<b>‚è≥ –í—ã–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫–∞–∑–∞–Ω–∞, –æ–∂–∏–¥–∞–π—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ !</b>''',reply_markup=keyboards.main, parse_mode='HTML')
							else:
								bot.send_message(message.chat.id, '''<b>‚úñÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞ –Ω–∞ –∫–∞—Ä—Ç—É 200 RUB.</b>''',reply_markup=keyboards.main, parse_mode='HTML')	
						else:
							q.execute(f"update list_bot set balance ='0' where bot = '{botsname}'")
							connection.commit()
							q.execute("INSERT INTO vivod (bot,user,method,summa,rekvizit,status) VALUES ('%s', '%s', '%s', '%s', '%s', '%s')"%(botsname,message.chat.id,method,check_balans[3],message.text,'WAIT'))
							connection.commit()
							add_ref_balance(message.chat.id,check_balans[3])
							keyboard = types.InlineKeyboardMarkup()
							q.execute(f"SELECT MAX(id) FROM vivod")
							maxid = q.fetchone()[0]
							keyboard.add(types.InlineKeyboardButton(text='üîì –°—Ç–∞—Ç—É—Å –≤—ã–ø–ª–∞—Ç—ã',callback_data=f'–£–∑–Ω–∞—Ç—å—Å—Ç–∞—Ç—É—Å {maxid}'))
							bot.send_message(-1001695154512, f'''<b>‚úÖ –ù–æ–≤–∞—è –≤—ã–ø–ª–∞—Ç–∞:</b>
<b>‚îú–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> <code>{message.chat.id}</code>
<b>‚îî–°—É–º–º–∞:</b> <code>{check_balans[3]} RUB</code>
<b>–±–æ—Ç:</b> <code>{botsname}</code>''', parse_mode='HTML', reply_markup=keyboard)
							bot.send_message(message.chat.id, '''<b>‚è≥ –í—ã–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫–∞–∑–∞–Ω–∞, –æ–∂–∏–¥–∞–π—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ !</b>''',reply_markup=keyboards.main, parse_mode='HTML')
					else:
						bot.send_message(message.chat.id, '''<b>‚úñÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞ 10 RUB.</b>''',reply_markup=keyboards.main, parse_mode='HTML')	
				else:
					q.execute(f'SELECT * FROM ugc_users WHERE id = "{message.chat.id}" and bot = "{bot_name}"')
					balancesref = q.fetchone()
					if str(balancesref[3]) >= str(10):
						if str(method) == str('CARD'):
							if str(balancesref[3]) >= str(200):
								q.execute(f"update ugc_users set balance ='0' where id = '{message.chat.id}' and bot = '{bot_name}'")
								connection.commit()
								q.execute("INSERT INTO vivod (bot,user,method,summa,rekvizit,status) VALUES ('%s', '%s', '%s', '%s', '%s', '%s')"%('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å',message.chat.id,method,balancesref[1],message.text,'WAIT'))
								connection.commit()
								keyboard = types.InlineKeyboardMarkup()
								q.execute(f"SELECT MAX(id) FROM vivod")
								maxid = q.fetchone()[0]
								keyboard.add(types.InlineKeyboardButton(text='üîì –°—Ç–∞—Ç—É—Å –≤—ã–ø–ª–∞—Ç—ã',callback_data=f'–£–∑–Ω–∞—Ç—å—Å—Ç–∞—Ç—É—Å {maxid}'))
								bot.send_message(-1001695154512, f'''<b>‚úÖ –ù–æ–≤–∞—è –≤—ã–ø–ª–∞—Ç–∞:</b>
<b>‚îú–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> <code>{message.chat.id}</code>
<b>‚îî–°—É–º–º–∞:</b> <code>{balancesref[3]} RUB</code>
<b>–±–æ—Ç:</b> <code>{botsname}</code>''', parse_mode='HTML', reply_markup=keyboard)
								bot.send_message(message.chat.id, '''<b>‚è≥ –í—ã–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫–∞–∑–∞–Ω–∞, –æ–∂–∏–¥–∞–π—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ !</b>''',reply_markup=keyboards.main, parse_mode='HTML')
							else:
								bot.send_message(message.chat.id, '''<b>‚úñÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞ –Ω–∞ –∫–∞—Ä—Ç—É 200 RUB.</b>''',reply_markup=keyboards.main, parse_mode='HTML')	
						else:
							q.execute(f"update ugc_users set balance ='0' where id = '{message.chat.id}' and bot = '{bot_name}'")
							connection.commit()
							q.execute("INSERT INTO vivod (bot,user,method,summa,rekvizit,status) VALUES ('%s', '%s', '%s', '%s', '%s', '%s')"%('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å',message.chat.id,method,balancesref[1],message.text,'WAIT'))
							connection.commit()
							keyboard = types.InlineKeyboardMarkup()
							q.execute(f"SELECT MAX(id) FROM vivod")
							maxid = q.fetchone()[0]
							keyboard.add(types.InlineKeyboardButton(text='üîì –°—Ç–∞—Ç—É—Å –≤—ã–ø–ª–∞—Ç—ã',callback_data=f'–£–∑–Ω–∞—Ç—å—Å—Ç–∞—Ç—É—Å {maxid}'))
							bot.send_message(-1001695154512, f'''<b>‚úÖ –ù–æ–≤–∞—è –≤—ã–ø–ª–∞—Ç–∞:</b>
<b>‚îú–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> <code>{message.chat.id}</code>
<b>‚îî–°—É–º–º–∞:</b> <code>{balancesref[3]} RUB</code>
<b>–±–æ—Ç:</b> <code>{botsname}</code>''', parse_mode='HTML', reply_markup=keyboard)
							bot.send_message(message.chat.id, '''<b>‚è≥ –í—ã–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫–∞–∑–∞–Ω–∞, –æ–∂–∏–¥–∞–π—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ !</b>''',reply_markup=keyboards.main, parse_mode='HTML')
					else:
						bot.send_message(message.chat.id, '''<b>‚úñÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞ 10 RUB.</b>''',reply_markup=keyboards.main, parse_mode='HTML')
		else:
			bot.send_message(message.chat.id, '<b>üìõ –ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω—ã —Ä–µ–∫–≤–∏–∑–∏—Ç—ã.</b>', parse_mode='HTML',reply_markup=keyboards.main)
	else:
		bot.send_message(message.chat.id, '‚úñÔ∏è –í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',reply_markup=keyboards.main)

def supportadd(message,msg_id):
	try:
		if message.text != '–û—Ç–º–µ–Ω–∞':
			connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
			q = connection.cursor()
			q.execute("INSERT INTO support (user,text,status,bot) VALUES ('%s', '%s', '%s', '%s')"%(message.chat.id,message.text,'2',bot_name))
			connection.commit()
			bot.send_message(message.chat.id, '''<b>‚úîÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.</b>''', parse_mode='HTML', reply_markup=keyboards.main)
		else:
			bot.send_message(message.chat.id, '<b>‚úñÔ∏è –í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é</b>', parse_mode='HTML',reply_markup=keyboards.main)
	except:
		bot.send_message(message.chat.id, f'''<b>‚úñÔ∏è –û—à–∏–±–∫–∞</b>''',parse_mode='HTML',reply_markup=keyboards.main)

def add_proxi(message,akkss,msg_id):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		try:
			proxi = message.text
			login_prox = proxi.split('@')[0].split(':')[0]
			pass_prox = proxi.split('@')[0].split(':')[1]
			ip_prox = proxi.split('@')[1].split(':')[0]
			port_prox = proxi.split('@')[1].split(':')[1]
			connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_avtopost)
			q = connection.cursor()
			q.execute(f"update akk set proxi = '{proxi}' where id = '{akkss}'")
			connection.commit()
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'—Å–ø–∏—Å–æ–∫ {akkss}'))
			bot.send_message(message.chat.id,F'''‚úîÔ∏è –£—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ –ø—Ä–æ–∫—Å–∏.''',parse_mode='HTML', reply_markup=keyboard)
		except Exception as e:
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'—Å–ø–∏—Å–æ–∫ {akkss}'))
			bot.send_message(message.chat.id,f'‚úñÔ∏è –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞',parse_mode='HTML', reply_markup=keyboard)
	else:
		keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'—Å–ø–∏—Å–æ–∫ {akkss}'))
		bot.send_message(message.chat.id, '‚úîÔ∏è –í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',reply_markup=keyboard)

def addchanels(message,botsnames,msg_id):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		if message.forward_from_chat != None:
			try:
				connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
				q = connection.cursor()
				invite_link =  bot.create_chat_invite_link(chat_id = message.forward_from_chat.id, member_limit = 1).invite_link
				q.execute(f'SELECT chanel_id FROM chanel WHERE bot = "{botsnames}"')
				srow = q.fetchone()
				if srow != None:
					q.execute(f"update chanel set chanel_id ='{message.forward_from_chat.id}' where bot = '{botsnames}'")
					connection.commit()
				else:
					q.execute("INSERT INTO chanel (chanel_id,bot) VALUES ('%s', '%s')"%(message.forward_from_chat.id,botsnames))
					connection.commit()
				bot.send_message(message.chat.id, '''‚úîÔ∏è –ö–∞–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω''',reply_markup=keyboards.main, parse_mode='HTML')
			except ApiTelegramException as e:
				bot.send_message(message.chat.id, f'''‚úñÔ∏è –û—à–∏–±–∫–∞ 
# –°–ª–∏—Ç–æ –≤ end_soft: <code>{e.result_json["description"]}</code>''',reply_markup=keyboards.main, parse_mode='HTML')	
		else:
			bot.send_message(message.chat.id, '''‚úñÔ∏è –û—à–∏–±–∫–∞ 
# –°–ª–∏—Ç–æ –≤ end_soft: <code>–í—ã –Ω–µ –ø–µ—Ä–µ—Å–ª–∞–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞</code>''',reply_markup=keyboards.main, parse_mode='HTML')	
	else:
		bot.send_message(message.chat.id, '‚úñÔ∏è –í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é',reply_markup=keyboards.main)

def new_data(message,smena,idchats,idakk):
	keyboard = types.InlineKeyboardMarkup()
	keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'—Å–ø–∏—Å–æ–∫ {idakk}'))
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_avtopost)
		q = connection.cursor()
		if str(smena) == 'hold':
			try:
				if int(message.text) >= int(10):
					date = datetime.today() + timedelta(minutes=int(message.text))
					date = date.strftime("%H:%M")
					q.execute(f"update list_chat set {str(smena)} = '{message.text}' where id = '{idchats}'")
					connection.commit()
					q.execute(f"update list_chat set data = '{date}' where id = '{idchats}'")
					connection.commit()
					bot.send_message(message.chat.id, '‚úîÔ∏è –ó–Ω–∞—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ.',parse_mode='HTML', reply_markup=keyboard)
				else:
					bot.send_message(message.chat.id, '‚úñÔ∏è –û—à–∏–±–∫–∞, –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –∑–∞–¥–µ—Ä–∂–∫–∏ 10 –º–∏–Ω—É—Ç.',parse_mode='HTML', reply_markup=keyboard)
			except:
				bot.send_message(message.chat.id, '‚úñÔ∏è –û—à–∏–±–∫–∞, –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –∑–∞–¥–µ—Ä–∂–∫–∏ 10 –º–∏–Ω—É—Ç.',parse_mode='HTML', reply_markup=keyboard)
		else:
			q.execute(f"update list_chat set {str(smena)} = '{message.text}' where id = '{idchats}'")
			connection.commit()
			bot.send_message(message.chat.id, '‚úîÔ∏è –ó–Ω–∞—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ.',parse_mode='HTML', reply_markup=keyboard)
	else:
		bot.send_message(message.chat.id, '‚úñÔ∏è –û—Ç–º–µ–Ω–∏–ª–∏.',parse_mode='HTML', reply_markup=keyboard)

def addcategor(message,idbots):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute("INSERT INTO categor (name,bot) VALUES ('%s','%s')"%(message.text,idbots))
		connection.commit()
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–ú–∞–≥–∞–∑–∏–Ω {idbots}'))
		bot.send_message(message.chat.id, f'''‚úîÔ∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞.''', reply_markup=keyboard)
	else:
		bot.send_message(message.chat.id, '‚úñÔ∏è –í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=keyboards.main)

def addtovar(message,categor):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		msg = bot.send_message(message.chat.id, '''<b>‚úçÔ∏è –£–∫–∞–∂–∏—Ç–µ 
# –°–ª–∏—Ç–æ –≤ end_soft —Ç–æ–≤–∞—Ä–∞:</b>''',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, addtovar1, categor, message.text)
	else:
		bot.send_message(message.chat.id, '‚úñÔ∏è –í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=keyboards.main)
def reviews(message):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		bot.send_message(-1001660417215, f'''<b>üíå –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤:</b>
<b>‚îú–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> @{message.from_user.username}
<b>‚îî–¢–µ–∫—Å—Ç:</b> <code>{message.text}</code>''',parse_mode='HTML')
		bot.send_message(message.chat.id, '''<b> ‚ù§Ô∏è –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤, –Ω–∞–º –æ—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ.</b>''',parse_mode='HTML', reply_markup=keyboards.main)
	else:
		bot.send_message(message.chat.id, '‚úñÔ∏è –í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=keyboards.main)

def addtovar1(message,categor,name):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		msg = bot.send_message(message.chat.id, '''<b>‚úçÔ∏è –£–∫–∞–∂–∏—Ç–µ 
# –°–ª–∏—Ç–æ –≤ end_soft –¥–ª—è —Ç–æ–≤–∞—Ä–∞ (–û—Ç 5—Ä):</b>''', parse_mode='HTML', reply_markup=keyboards.main)
		bot.register_next_step_handler(msg, addtovar2, categor, name, message.text)
	else:
		bot.send_message(message.chat.id, '‚úñÔ∏è –í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=keyboards.main)

def addtovar2(message,categor,name,info):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		msg = bot.send_message(message.chat.id, '''<b>‚úçÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ TXT —Ñ–∞–π–ª —Å —Ç–æ–≤–∞—Ä–∞–º–∏ (–∫–∞–∂–¥—ã–π —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏):</b>''',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, addtovar3, categor, name, info, message.text)
	else:
		bot.send_message(message.chat.id, '‚úñÔ∏è –í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=keyboards.main)

def addtovar3(message,categor,name,info,prace):
	if message.text != '–û—Ç–º–µ–Ω–∞':
		try:
			msg = bot.send_message(message.chat.id, f'''‚è≥ –î–æ–±–∞–≤–ª—è–µ–º.......''', reply_markup=keyboards.main)
			bot.delete_message(message.from_user.id,msg.message_id)
			try:
				if int(prace) >= 5:
					connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
					q = connection.cursor()
					save_dir = os.getcwd()
					file_name = message.document.file_name
					file_id = message.document.file_name
					file_id_info = bot.get_file(message.document.file_id)
					downloaded_file = bot.download_file(file_id_info.file_path)
					src = generator_pw()
					src = f'{src}.txt'
					with open(save_dir + "/tovar/" + src, 'wb') as new_file:
						new_file.write(downloaded_file)
					q.execute("INSERT INTO tovar (name,info,prace,categor,files,status) VALUES ('%s','%s','%s','%s','%s','%s')"%(name,info,prace,categor,src,'WAIT'))
					connection.commit()	
					keyboard = types.InlineKeyboardMarkup()
					keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–±–æ—Ç'))
					bot.send_message(message.chat.id, f'''‚úîÔ∏è –¢–æ–≤–∞—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é –∏ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–π 24 —á–∞—Å–æ–≤.''', reply_markup=keyboard)
					keyboard = types.InlineKeyboardMarkup()
					keyboard.add(types.InlineKeyboardButton(text='‚úÖ –û–¥–æ–±—Ä–∏—Ç—å', callback_data=f'–û–¥–æ–±—Ä–∏—Ç—å {src} {message.chat.id}'))
					keyboard.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data=f'–û—Ç–∫–ª–æ–Ω–∏—Ç—å {src} {message.chat.id}'))
					doc = open(save_dir + "/tovar/" + src, 'rb')
					q.execute(f'SELECT * FROM categor WHERE id = "{categor}"')
					srow = q.fetchone()
					bot.send_document(-1001799352145, doc, caption=f''' –ù–∞–∑–≤–∞–Ω–∏–µ: {name}
	–û–ø–∏—Å–∞–Ω–∏–µ: {info}

	–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {srow[1]}
	–¶–µ–Ω–∞: {prace}
	–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.chat.id}
	–ë–æ—Ç: @{srow[2]}''',reply_markup=keyboard)
					doc.close()

				else:
					keyboard = types.InlineKeyboardMarkup()
					keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–±–æ—Ç'))
					bot.send_message(message.chat.id, f'''‚úñÔ∏è –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ –Ω–æ–≤–æ–π.''', reply_markup=keyboard)
			except Exception as e:
				print(e)
		except:
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–±–æ—Ç'))
			bot.send_message(message.chat.id, f'''‚úñÔ∏è –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ –Ω–æ–≤–æ–π.''', reply_markup=keyboard)
	else:
		bot.send_message(message.chat.id, '‚úñÔ∏è –í–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é', reply_markup=keyboards.main)

def btc_oplata_2(message):
		try:
			if int(message.text) >= int(1):
				connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
				q = connection.cursor()
				key_pay = '08c92cac45de169773b42104f0f69ea2'
				id_payss = '1054'
				id_pay = generator_pw()
				awfawf = f"{message.text}|{id_pay}|{id_payss}|RUB|@{bot_name}:{message.chat.id}|{key_pay}"
				hash = hashlib.md5(awfawf.encode("utf-8")).hexdigest()
				url = f'https://payok.io/pay?amount={message.text}&payment={id_pay}&shop={id_payss}&desc=@{bot_name}:{message.chat.id}&sign={hash}'
				q.execute("INSERT INTO pay_ok (user,id_pay) VALUES ('%s', '%s')"%(message.chat.id,id_pay))
				connection.commit()
				keyboard = types.InlineKeyboardMarkup()
				keyboard.add(types.InlineKeyboardButton(text=f'''‚ÜóÔ∏è –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ ''',url=url))
				keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'–ö–∞–±–∏–Ω–µ—Ç '))
				bot.send_message(message.chat.id, '''‚ùóÔ∏è –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ  –Ω–∏–∂–µ –∏ –æ–ø–ª–∞—Ç–∏—Ç–µ —Å—á–µ—Ç —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º !

üí° –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å.''', reply_markup=keyboard)
			else:
				keyboard = types.InlineKeyboardMarkup()
				keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'–ø—Ä–æ—Ñ–∏–ª—å '))
				bot.send_message(message.chat.id, f'‚ùóÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è 10 RUB',parse_mode='HTML', reply_markup=keyboards.main)
		except:
			bot.send_message(message.chat.id, f'‚ùóÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è 10 RUB',parse_mode='HTML', reply_markup=keyboards.main)

@bot.callback_query_handler(func=lambda call: True)
def handler_call(call):
	a = call.data.split()

	if a[0] == '–û–¥–æ–±—Ä–∏—Ç—å':
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute(f"update tovar set status = 'DONE' where files = '{a[1]}'")
		connection.commit()
		print(call.message.message_id)
		text = f'''{call.message.caption}
‚úÖ –¢–æ–≤–∞—Ä –æ–¥–æ–±—Ä–µ–Ω'''
		bot.edit_message_caption(chat_id=-1001799352145, message_id=call.message.message_id, caption=text, parse_mode='HTML')
		q.execute(f"SELECT name FROM tovar where files = '{a[1]}'")
		namename = q.fetchone()[0]
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='‚úñÔ∏è –ó–∞–∫—Ä—ã—Ç—å',callback_data=f'–ó–∞–∫—Ä—ã—Ç—å '))
		try:
			bot.send_message(a[2], f'''‚úÖ {namename} —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω –∏ –ø–æ—è–≤–∏–ª—Å—è –Ω–∞ –≤–∏—Ç—Ä–∏–Ω–µ.''',parse_mode='HTML', reply_markup=keyboard)
		except Exception as e:
			pass

	if a[0] == 'check_opl':
		name = 'jopa'
		secret = '7a4ca73baf7bcb4f042d59c14e893ba158155fde'
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute(f"SELECT id_pay FROM pay_ok where user = '{call.message.chat.id}' ORDER BY id DESC LIMIT 1")
		zalupa = q.fetchone()[0]
		url = urllib.request.urlopen(f'https://api.crystalpay.ru/v1/?s={secret}&n={name}&o=receipt-check&i={zalupa}').read()
		result = json.loads(url.decode('utf8'))
		summ = (result['state'])
		summa = (result['payamount'])
		if summ == "payed":
			q.execute(f"update ugc_users set balance = balance + '{summa}' where id = '{call.message.chat.id}'")
			connection.commit()
			q.execute(f"update pay_ok set id_pay = 'paued' where user = '{call.message.chat.id}' ORDER BY id DESC LIMIT 1")
			connection.commit()
			bot.send_message(call.message.chat.id, f'–£—Å–ø–µ—à–Ω–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ: {summa} RUB')
		else: 
			bot.send_message(call.message.chat.id, '–í—ã –µ—â–µ –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏')

	if a[0] == 'check_opl2':
		api_key = 'F9F332866876657CF1CEF31E57F7E5DC-DBE2A835B23C5C1B965647C16C7DF76A-2188E143B43F3FC90765E400188BCE13'
		id_pays = '380'
		magaz = '1054'
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute(f"SELECT id_pay FROM pay_ok where user = '{call.message.chat.id}' ORDER BY id DESC LIMIT 1")
		zalupa = q.fetchone()[0]
		try:
			url2 = requests.post(url='https://payok.io/api/transaction', data={'API_ID': id_pays, 'API_KEY': api_key, 'shop': magaz, 'payment': zalupa,})
			response_data = url2.json()
			summ = (response_data['status'])
			stat = (response_data['1'])
			result2 = stat.get('amount_profit')
			if summ == "success":
				q.execute(f"update ugc_users set balance = balance + '{result2}' where id = '{call.message.chat.id}'")
				connection.commit()
				q.execute(f"update pay_ok set id_pay = 'paued' where user = '{call.message.chat.id}' ORDER BY id DESC LIMIT 1")
				connection.commit()
				bot.send_message(call.message.chat.id, f'–£—Å–ø–µ—à–Ω–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ:  <b>{result2}</b> RUB',parse_mode='HTML')
			else: 
				bot.send_message(call.message.chat.id, '<b>–û—à–∏–±–∫–∞</b>',parse_mode='HTML')
		except:
			bot.send_message(call.message.chat.id, f'<b>–í—ã –µ—â–µ –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏</b>', parse_mode='HTML')


	if a[0] == '–û—Ç–∫–ª–æ–Ω–∏—Ç—å':
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='–ù–∏–∑–∫–∏–π –≤–∞–ª–∏–¥ —Ç–æ–≤–∞—Ä–∞',callback_data=f'–û—Ç–∫–ª–æ–Ω {a[1]} {a[2]} 1'))
		keyboard.add(types.InlineKeyboardButton(text='–ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç',callback_data=f'–û—Ç–∫–ª–æ–Ω {a[1]} {a[2]} 2'))
		keyboard.add(types.InlineKeyboardButton(text='–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤',callback_data=f'–û—Ç–∫–ª–æ–Ω {a[1]} {a[2]} 3'))
		keyboard.add(types.InlineKeyboardButton(text='–°—ä–µ–±–∞–ª –Ω–∞—Ö—É–π –æ—Ç—Å—é–¥–∞',callback_data=f'–û—Ç–∫–ª–æ–Ω {a[1]} {a[2]} 4'))
		bot.edit_message_reply_markup(chat_id=-1001799352145, message_id=call.message.message_id, reply_markup=keyboard)
	
	if a[0] == '–û—Ç–∫–ª–æ–Ω':
		global infos
		infos = '–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤'
		if int(a[3]) == int(1):
			infos = '–ù–∏–∑–∫–∏–π –≤–∞–ª–∏–¥ —Ç–æ–≤–∞—Ä–∞'
		if int(a[3]) == int(2):
			infos = '–ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç'
		if int(a[3]) == int(3):
			infos == '–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤'
		if int(a[3]) == int(4):
			infos = '–°—ä–µ–±–∞–ª –Ω–∞—Ö—É–π –æ—Ç—Å—é–¥–∞'
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute(f"SELECT name FROM tovar where files = '{a[1]}'")
		namename = q.fetchone()[0]
		q.execute(f"DELETE FROM tovar where files = '{a[1]}'")
		connection.commit()
		text = f'''{call.message.caption}

‚úñÔ∏è –¢–æ–≤–∞—Ä –æ—Ç–∫–ª–æ–Ω–µ–Ω'''
		bot.edit_message_text(chat_id=-1001799352145, message_id=call.message.message_id, caption=text, parse_mode='HTML')
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='‚úñÔ∏è –ó–∞–∫—Ä—ã—Ç—å',callback_data=f'–ó–∞–∫—Ä—ã—Ç—å '))
		try:
			bot.send_message(a[2], f'''‚úñÔ∏è {namename} –æ—Ç–∫–ª–æ–Ω–µ–Ω —Å –ø–æ–º–µ—Ç–∫–æ–π: {infos}.''',parse_mode='HTML', reply_markup=keyboard)
		except Exception as e:
			pass

		
	if a[0] == '–±–æ—Ç':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute(f"SELECT * FROM list_bot where user = '{call.message.chat.id}' ORDER BY id DESC LIMIT 1")
		rows = q.fetchone()
		try:
			if str(rows[8]) != str('–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'):
				tomorrow = datetime.now()
				data = tomorrow.strftime('%d/%m/%Y')
				q.execute(f"SELECT COUNT(id) FROM ugc_users where bot = '{rows[6]}'")
				user_count = q.fetchone()[0]
				q.execute(f"SELECT COUNT(id) FROM ugc_users where bot = '{rows[6]}' and data = '{data}'")
				user_count_data = q.fetchone()[0]
				q.execute(f"SELECT COUNT(id) FROM list_zakaz where bot = '{rows[6]}'")
				zakaz_count = q.fetchone()[0]
				q.execute(f"SELECT COUNT(id) FROM list_zakaz where data = '{data}' and  bot = '{rows[6]}'")
				zakaz_count_data1 = q.fetchone()[0]
				q.execute(f"SELECT data FROM list_zakaz where bot = '{rows[6]}' ORDER BY id DESC LIMIT 1")
				try:
					oldzakaz = q.fetchone()[0]
				except Exception as e:
					oldzakaz = '–ù–µ—Ç'
				q.execute(f"SELECT COUNT(id) FROM support where bot = '{rows[6]}' and status = '1'")
				support_count = q.fetchone()[0]
				status = "üî¥ –í—ã–∫–ª—é—á–∏—Ç—å" if rows[8] == "–†–∞–±–æ—Ç–∞–µ—Ç" else "üü¢ –í–∫–ª—é—á–∏—Ç—å"
				q.execute(f"SELECT COUNT(id) FROM support where bot = '{rows[6]}' and status = '1'")
				support_count = q.fetchone()[0]
				status = "üî¥ –í—ã–∫–ª—é—á–∏—Ç—å" if rows[8] == "–†–∞–±–æ—Ç–∞–µ—Ç" else "üü¢ –í–∫–ª—é—á–∏—Ç—å"
				q.execute(f'SELECT chanel_id FROM chanel WHERE bot = "{rows[6].lower()}"')
				chanel_id = q.fetchone()
				if chanel_id != None:
					chanel_id = '–ê–∫—Ç–∏–≤–µ–Ω'
				else:
					chanel_id = '–ù–µ—Ç'
				q.execute(f"SELECT COUNT(id) FROM list_aktiv where bot = '{rows[6]}' and code != '–ù–µ—Ç'")
				sms_count = q.fetchone()[0]
				if sms_count == None:
					sms_count = 0
				keyboard = types.InlineKeyboardMarkup()
				keyboard.add(types.InlineKeyboardButton(text='üîé –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',callback_data=f'–ü–æ–∏—Å–∫ {rows[0]}'))
				#types.InlineKeyboardButton(text='üí¨ –†–∞—Å—Å—ã–ª–∫–∞',url=f'https://t.me/{rows[6]}?start=sendall'),
				keyboard.add(types.InlineKeyboardButton(text=f'üì® –ü–æ–¥–¥–µ—Ä–∂–∫–∞ ({support_count})',callback_data=f'–ü–æ–¥–¥–µ—Ä–∂–∫–∞ {rows[6]}'),types.InlineKeyboardButton(text='üìà –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã',callback_data=f'–∑–∞–∫–∞–∑—ã {rows[6]}'))
				keyboard.add(types.InlineKeyboardButton(text='üí∏ –°–º–µ–Ω–∏—Ç—å –Ω–∞—Ü–µ–Ω–∫—É',callback_data=f'–ù–∞—Ü–µ–Ω–∫–∞ {rows[0]}'),types.InlineKeyboardButton(text=f'üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏',callback_data=f'–ù–∞—Å—Ç—Ä–æ–π–∫–∏ {rows[6]}'))
				#keyboard.add(types.InlineKeyboardButton(text='–ü—Ä–µ–º–∏—É–º',callback_data=f'–ü—Ä–µ–º–∏—É–º'))
				#,types.InlineKeyboardButton(text='üõç –ú–∞–≥–∞–∑–∏–Ω',callback_data=f'–ú–∞–≥–∞–∑–∏–Ω {rows[6]}')
				#keyboard.add(types.InlineKeyboardButton(text='üéõ –†–µ–¥–∞–∫—Ç–æ—Ä –º–µ–Ω—é',callback_data=f'–†–µ–¥–∞–∫—Ç–æ—Ä–º–µ–Ω—é {rows[6]}'))
				#keyboard.add(types.InlineKeyboardButton(text='üì¢ –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª',callback_data=f'–î–æ–±–∞–≤–∏—Ç—å–∫–∞–Ω–∞–ª {rows[6]}'))
				keyboard.add(types.InlineKeyboardButton(text='üõç –ú–∞–≥–∞–∑–∏–Ω',callback_data=f'–ú–∞–≥–∞–∑–∏–Ω {rows[6]}'))
				
				bot.send_message(call.message.chat.id, f'''<b>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
<b>‚îú–ë–æ—Ç:</b> @{rows[6]}	
<b>‚îú–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> <code>{user_count}</code>
<b>‚îú–ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b> <code>{user_count_data}</code>
<b>‚îî–ö–∞–Ω–∞–ª –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏:</b> <code>{chanel_id}</code>

<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞–∫—Ä—É—Ç–∫–∏:</b>
<b>‚îú–ó–∞–∫–∞–∑–æ–≤:</b> <code>{zakaz_count} —à—Ç</code>
<b>‚îú–ó–∞–∫–∞–∑–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è :</b> <code>{zakaz_count_data1} —à—Ç</code>
<b>‚îú–ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–∫–∞–∑:</b> <code>{oldzakaz}</code>
<b>‚îî–ù–∞—Ü–µ–Ω–∫–∞:</b> <code>{rows[5]} %</code>

<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–º—Å:</b>
<b>‚îú–ü—Ä–∏–Ω—è—Ç–æ —Å–º—Å:</b> <code>{sms_count} —à—Ç</code>
<b>‚îî–ù–∞—Ü–µ–Ω–∫–∞:</b> <code>{rows[14]} RUB</code>

<b>üè¶–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å:</b>
<b>‚îî–ü—Ä–∏–±—ã–ª—å:</b> <code>{rows[10]} RUB</code>''',parse_mode='HTML', reply_markup=keyboard)
			else:
				keyboard = types.InlineKeyboardMarkup()
				keyboard.add(types.InlineKeyboardButton(text='üîß –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å',callback_data=f'–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å {rows[0]} {rows[6]}'))
				keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–±–æ—Ç '))	
				bot.send_message(call.message.chat.id, f'''<b>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
<b>‚îú–ë–æ—Ç:</b> @{rows[6]}	
<b>‚îú–î–∞—Ç–∞ —É–¥–∞–ª–µ–Ω–∏—è:</b> <code>{rows[9]}</code>
<b>‚îî–°—Ç–∞—Ç—É—Å:</b> <code>{rows[8]}</code>
''',parse_mode='HTML', reply_markup=keyboard)

		except:
			pass

	if a[0] == 'bot_':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		try:
			connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
			q = connection.cursor()
			q.execute(f"SELECT * FROM list_bot where id = '{a[1]}'")
			rows = q.fetchone()
			if str(rows[8]) != str('–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'):
				tomorrow = datetime.now()
				data = tomorrow.strftime('%d/%m/%Y')
				q.execute(f"SELECT COUNT(id) FROM ugc_users where bot = '{rows[6]}'")
				user_count = q.fetchone()[0]
				q.execute(f"SELECT COUNT(id) FROM ugc_users where bot = '{rows[6]}' and data = '{data}'")
				user_count_data = q.fetchone()[0]
				q.execute(f"SELECT COUNT(id) FROM list_zakaz where bot = '{rows[6]}'")
				zakaz_count = q.fetchone()[0]
				q.execute(f"SELECT COUNT(id) FROM list_zakaz where data = '{data}' and  bot = '{rows[6]}'")
				zakaz_count_data1 = q.fetchone()[0]
				q.execute(f"SELECT data FROM list_zakaz where bot = '{rows[6]}' ORDER BY id DESC LIMIT 1")
				try:
					oldzakaz = q.fetchone()[0]
				except Exception as e:
					oldzakaz = '–ù–µ—Ç'
				q.execute(f"SELECT COUNT(id) FROM support where bot = '{rows[6]}' and status = '1'")
				support_count = q.fetchone()[0]
				status = "üî¥ –í—ã–∫–ª—é—á–∏—Ç—å" if rows[8] == "–†–∞–±–æ—Ç–∞–µ—Ç" else "üü¢ –í–∫–ª—é—á–∏—Ç—å"
				q.execute(f'SELECT chanel_id FROM chanel WHERE bot = "{rows[6].lower()}"')
				chanel_id = q.fetchone()
				if chanel_id != None:
					chanel_id = '–ê–∫—Ç–∏–≤–µ–Ω'
				else:
					chanel_id = '–ù–µ—Ç'

				q.execute(f"SELECT COUNT(id) FROM list_aktiv where bot = '{rows[6]}' and code != '–ù–µ—Ç'")
				sms_count = q.fetchone()[0]
				if sms_count == None:
					sms_count = 0
				keyboard = types.InlineKeyboardMarkup()
				keyboard.add(types.InlineKeyboardButton(text='üîé –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',callback_data=f'–ü–æ–∏—Å–∫ {rows[0]}'))
				#types.InlineKeyboardButton(text='üí¨ –†–∞—Å—Å—ã–ª–∫–∞',url=f'https://t.me/{rows[6]}?start=sendall'),
				keyboard.add(types.InlineKeyboardButton(text=f'üì® –ü–æ–¥–¥–µ—Ä–∂–∫–∞ ({support_count})',callback_data=f'–ü–æ–¥–¥–µ—Ä–∂–∫–∞ {rows[6]}'),types.InlineKeyboardButton(text='üìà –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã',callback_data=f'–∑–∞–∫–∞–∑—ã {rows[6]}'))
				keyboard.add(types.InlineKeyboardButton(text='üí∏ –°–º–µ–Ω–∏—Ç—å –Ω–∞—Ü–µ–Ω–∫—É',callback_data=f'–ù–∞—Ü–µ–Ω–∫–∞ {rows[0]}'),types.InlineKeyboardButton(text=f'üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏',callback_data=f'–ù–∞—Å—Ç—Ä–æ–π–∫–∏ {rows[6]}'))
				#keyboard.add(types.InlineKeyboardButton(text='–ü—Ä–µ–º–∏—É–º',callback_data=f'–ü—Ä–µ–º–∏—É–º'))
				#keyboard.add(types.InlineKeyboardButton(text='üéõ –†–µ–¥–∞–∫—Ç–æ—Ä –º–µ–Ω—é',callback_data=f'–†–µ–¥–∞–∫—Ç–æ—Ä–º–µ–Ω—é {rows[6]}'))
				#keyboard.add(types.InlineKeyboardButton(text='üì¢ –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª',callback_data=f'–î–æ–±–∞–≤–∏—Ç—å–∫–∞–Ω–∞–ª {rows[6]}'))
				keyboard.add(types.InlineKeyboardButton(text='üõç –ú–∞–≥–∞–∑–∏–Ω',callback_data=f'–ú–∞–≥–∞–∑–∏–Ω {rows[6]}'))
				
				bot.send_message(call.message.chat.id, f'''<b>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
<b>‚îú–ë–æ—Ç:</b> @{rows[6]}	
<b>‚îú–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> <code>{user_count}</code>
<b>‚îú–ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b> <code>{user_count_data}</code>
<b>‚îî–ö–∞–Ω–∞–ª –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏:</b> <code>{chanel_id}</code>

<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞–∫—Ä—É—Ç–∫–∏:</b>
<b>‚îú–ó–∞–∫–∞–∑–æ–≤:</b> <code>{zakaz_count} —à—Ç</code>
<b>‚îú–ó–∞–∫–∞–∑–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è :</b> <code>{zakaz_count_data1} —à—Ç</code>
<b>‚îú–ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–∫–∞–∑:</b> <code>{oldzakaz}</code>
<b>‚îî–ù–∞—Ü–µ–Ω–∫–∞:</b> <code>{rows[5]} %</code>

<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–º—Å:</b>
<b>‚îú–ü—Ä–∏–Ω—è—Ç–æ —Å–º—Å:</b> <code>{sms_count} —à—Ç</code>
<b>‚îî–ù–∞—Ü–µ–Ω–∫–∞:</b> <code>{rows[12]} RUB</code>

<b>üè¶–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å:</b>
<b>‚îî–ü—Ä–∏–±—ã–ª—å:</b> <code>{rows[10]} RUB</code>''',parse_mode='HTML', reply_markup=keyboard)
			else:
				keyboard = types.InlineKeyboardMarkup()
				keyboard.add(types.InlineKeyboardButton(text='üîß –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å',callback_data=f'–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å {rows[0]} {rows[6]}'))
				keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–±–æ—Ç '))	
				bot.send_message(call.message.chat.id, f'''<b>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
<b>‚îú–ë–æ—Ç:</b> @{rows[6]}	
<b>‚îú–î–∞—Ç–∞ —É–¥–∞–ª–µ–Ω–∏—è:</b> <code>{rows[9]}</code>
<b>‚îî–°—Ç–∞—Ç—É—Å:</b> <code>{rows[8]}</code>
''',parse_mode='HTML', reply_markup=keyboard)

		except:
			pass

	elif a[0] == '–ú–∞–≥–∞–∑–∏–Ω':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute(f'SELECT deposit FROM list_bot WHERE bot = "{a[1].lower()}"')
		bot_deposit = q.fetchone()[0]
		if int(bot_deposit) >= 0:
			tomorrow = datetime.now()
			data = tomorrow.strftime('%d/%m/%Y')
			q.execute(f"SELECT COUNT(id) FROM list_zakaz_shop where bot = '{a[1].lower()}'")
			zakaz_count_shop = q.fetchone()[0]
			q.execute(f"SELECT COUNT(id) FROM list_zakaz_shop where data = '{data}' and  bot = '{a[1].lower()}'")
			zakaz_count_data1_shop = q.fetchone()[0]
			q.execute(f"SELECT data FROM list_zakaz_shop where bot = '{a[1].lower()}' ORDER BY id DESC LIMIT 1")
			try:
				oldzakaz_shop = q.fetchone()[0]
			except Exception as e:
				oldzakaz_shop = '–ù–µ—Ç'
			connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
			q = connection.cursor()
			keyboard = types.InlineKeyboardMarkup()
			q.execute(f"SELECT * FROM categor WHERE bot = '{a[1].lower()}'")
			rows = q.fetchall()
			for i in rows:
				keyboard.add(types.InlineKeyboardButton(text=i[1],callback_data=f'–¢–æ–≤–∞—Ä—ã {i[0]} {a[1]}'))
			keyboard.add(types.InlineKeyboardButton(text=f'''‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é''',callback_data=F'–î–æ–±–∞–≤–∏—Ç—å–∫–∞—Ç–µ–≥–æ—Ä–∏—é {a[1]}'))
			keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=F'–±–æ—Ç'))
			bot.send_message(call.message.chat.id,f'''<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∞–≥–∞–∑–∏–Ω–∞:</b>
<b>‚îú–ü–æ–∫—É–ø–æ–∫:</b> <code>{zakaz_count_shop} —à—Ç</code>
<b>‚îú–ü–æ–∫—É–ø–æ–∫ –∑–∞ —Å–µ–≥–æ–¥–Ω—è :</b> <code>{zakaz_count_data1_shop} —à—Ç</code>
<b>‚îî–ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–∫–∞–∑:</b> <code>{oldzakaz_shop}</code>''', reply_markup=keyboard, parse_mode='HTML')
		else:
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=F'–±–æ—Ç'))
			bot.send_message(call.message.chat.id,f'''üòï –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç  –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –≤–Ω–µ—Å–µ–Ω–∏—è –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞ –≤ —Ä–∞–∑–º–µ—Ä–µ 1000 RUB.
–≠—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–µ—Ä—å—ë–∑–Ω–æ—Å—Ç—å –≤–∞—à–∏—Ö –Ω–∞–º–µ—Ä–µ–Ω–∏–π –∏ –∏–∑–±–µ–∂–∞—Ç—å –æ–±–º–∞–Ω–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –ø—Ä–æ–¥–∞–≤—Ü–æ–≤.''', reply_markup=keyboard, parse_mode='HTML')

	
	elif a[0] == '–¢–æ–≤–∞—Ä—ã':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		keyboard = types.InlineKeyboardMarkup()
		q.execute(f"SELECT * FROM tovar WHERE categor = '{a[1]}'")
		rows = q.fetchall()
		if len(rows) != 0:
			for i in rows:
				keyboard.add(types.InlineKeyboardButton(text=i[1],callback_data=f'–¢–æ–≤–∞—Ä {i[0]} {a[2]}'))

		keyboard.add(types.InlineKeyboardButton(text=f'''‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä''',callback_data=F'–î–æ–±–∞–≤–∏—Ç—å—Ç–æ–≤–∞—Ä {a[1]}'))
		keyboard.add(types.InlineKeyboardButton(text=f'''‚ûñ –£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é''',callback_data=F'–£–¥–∞–ª–∏—Ç—å–∫–∞—Ç–µ–≥–æ—Ä–∏—é {a[1]} {a[2]}'))
		keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'–ú–∞–≥–∞–∑–∏–Ω {a[2]}'))
		bot.send_message(call.message.chat.id,'''üìú –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:''', reply_markup=keyboard, parse_mode='HTML')
	
	if a[0] == '–¢–æ–≤–∞—Ä':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		keyboard = types.InlineKeyboardMarkup()
		q.execute(f"SELECT * FROM tovar WHERE id = '{a[1]}'")
		rows = q.fetchone()
		colvo_rovar = 0 
		with open (f'/root/smm/tovar/{rows[5]}') as f: 
			for line in f: 
				if line != '\n': 
					colvo_rovar += 1
		keyboard.add(types.InlineKeyboardButton(text='üóë –£–¥–∞–ª–∏—Ç—å',callback_data=f'–£–¥–∞–ª–∏—Ç—å—Ç–æ–≤–∞—Ä {rows[0]} {a[2]}'))
		keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'–ú–∞–≥–∞–∑–∏–Ω {a[2]}'))
		bot.send_message(call.message.chat.id,f'''<b>üì¶ –¢–æ–≤–∞—Ä:</b> {rows[1]}
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
<b>üìú –û–ø–∏—Å–∞–Ω–∏–µ:</b>
<code>{rows[2]}</code>
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
<b>üóÇ –û—Å—Ç–∞—Ç–æ–∫: {colvo_rovar} —à—Ç</b>
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
<b>üí≥ –¶–µ–Ω–∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É:</b>  <code>{rows[3]}</code> <b>RUB</b>''', reply_markup=keyboard, parse_mode='HTML')


	if a[0] == '–£–¥–∞–ª–∏—Ç—å—Ç–æ–≤–∞—Ä':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		keyboard = types.InlineKeyboardMarkup()
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute(f"DELETE FROM tovar where id = '{a[1]}'")
		connection.commit()
		keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'–ú–∞–≥–∞–∑–∏–Ω {a[2]}'))
		bot.send_message(call.message.chat.id,f'''–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω''', reply_markup=keyboard, parse_mode='HTML')
		
	if a[0] == '–î–æ–±–∞–≤–∏—Ç—å—Ç–æ–≤–∞—Ä':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'''‚ÜóÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å''',url='https://telegra.ph/XA·ààVA--SMM-FRANCHISE--Navigaciya-po-menyu-04-15 '))
		bot.send_message(call.message.chat.id,'''‚ùóÔ∏è –°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:''', reply_markup=keyboard, parse_mode='HTML')
		msg = bot.send_message(call.message.chat.id, '''<b>‚úçÔ∏è –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:</b>''',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, addtovar, a[1])

	if a[0] == '–î–æ–±–∞–≤–∏—Ç—å–∫–∞—Ç–µ–≥–æ—Ä–∏—é':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		msg = bot.send_message(call.message.chat.id, "<b>‚úçÔ∏è –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:</b>",parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, addcategor, a[1])

	if a[0] == '–£–¥–∞–ª–∏—Ç—å–∫–∞—Ç–µ–≥–æ—Ä–∏—é':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		keyboard = types.InlineKeyboardMarkup()
		q.execute(f"DELETE FROM categor where id = '{a[1]}'")
		connection.commit()
		keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–ú–∞–≥–∞–∑–∏–Ω {a[2]}'))	
		bot.send_message(call.message.chat.id, f'''‚úîÔ∏è –ì–æ—Ç–æ–≤–æ''',parse_mode='HTML', reply_markup=keyboard)

	if a[0] == '–ü—Ä–µ–º–∏—É–º':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute(f'SELECT chanel_id FROM chanel WHERE bot = "{a[1].lower()}"')
		chanel_id = q.fetchone()
		if chanel_id != None:
			chanel_id = '–ê–∫—Ç–∏–≤–µ–Ω'
		else:
			chanel_id = '–ù–µ—Ç'
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='üéõ –†–µ–¥–∞–∫—Ç–æ—Ä –º–µ–Ω—é',callback_data=f'–†–µ–¥–∞–∫—Ç–æ—Ä–º–µ–Ω—é {a[1]}'),types.InlineKeyboardButton(text='üõç –ú–∞–≥–∞–∑–∏–Ω',callback_data=f'—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ '))
		keyboard.add(types.InlineKeyboardButton(text='üì¢ –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª',callback_data=f'–î–æ–±–∞–≤–∏—Ç—å–∫–∞–Ω–∞–ª {a[1]}'))
		keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–±–æ—Ç '))	
		bot.send_message(call.message.chat.id, f'''<b>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
<b>‚îú–ü–æ–¥–ø–∏—Å–∫–∞ –¥–æ:</b> <code>–ë–µ–∑–ª–∏–º–∏—Ç</code>
<b>‚îú–†–µ–∂–∏–º –º–∞–≥–∞–∑–∏–Ω–∞:</b> <code>–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</code>
<b>‚îî–ö–∞–Ω–∞–ª –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏:</b> <code>{chanel_id}</code>''',parse_mode='HTML', reply_markup=keyboard)

	if a[0] == '–†–µ–¥–∞–∫—Ç–æ—Ä–º–µ–Ω—é':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute(f"SELECT * FROM keyboards where bot = '{a[1]}'")
		row = q.fetchall()
		keyboard = types.InlineKeyboardMarkup()
		for i in row:
			keyboard.add(types.InlineKeyboardButton(text=i[1],callback_data=f'–∫–Ω–æ–ø–∫–∞ {i[0]} {a[1]}'))
		keyboard.add(types.InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É',callback_data=f'–î–æ–±–∞–≤–∏—Ç—å–∫–Ω–æ–ø–∫—É {a[1]}'))	
		keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–±–æ—Ç '))	
		bot.send_message(call.message.chat.id, f'''‚ñ™Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—É—é:''',parse_mode='HTML', reply_markup=keyboard)

	if a[0] == '–∫–Ω–æ–ø–∫–∞':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute(f"SELECT * FROM keyboards where id = '{a[1]}'")
		row = q.fetchone()
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='‚ûñ –£–¥–∞–ª–∏—Ç—å',callback_data=f'–£–¥–∞–ª–∏—Ç—å–∫–Ω–æ–ø–∫—É {row[0]} {a[2]}'))	
		keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–†–µ–¥–∞–∫—Ç–æ—Ä–º–µ–Ω—é {a[2]}'))	
		bot.send_message(call.message.chat.id, row[2],parse_mode='HTML', reply_markup=keyboard)

	if a[0] == '–£–¥–∞–ª–∏—Ç—å–∫–Ω–æ–ø–∫—É':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		keyboard = types.InlineKeyboardMarkup()
		q.execute(f"DELETE FROM keyboards where id = '{a[1]}'")
		connection.commit()
		cmd1 = f'systemctl restart {a[2]}'
		subprocess.Popen(cmd1, shell=True)
		keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–±–æ—Ç '))	
		bot.send_message(call.message.chat.id, f'''‚úîÔ∏è –ì–æ—Ç–æ–≤–æ''',parse_mode='HTML', reply_markup=keyboard)
			
	if a[0] == '–î–æ–±–∞–≤–∏—Ç—å–∫–Ω–æ–ø–∫—É':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		msg = bot.send_message(call.message.chat.id, "<b>‚úçÔ∏è –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏:</b>",parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, addkeyboards, a[1])

	if a[0] == '–£–∑–Ω–∞—Ç—å—Å—Ç–∞—Ç—É—Å':
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute(f"SELECT status FROM vivod where id = '{a[1]}'")
		status = q.fetchone()[0]
		bot.answer_callback_query(callback_query_id=call.id,show_alert=True, text=status)
		
	if a[0] == '–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		tomorrow = datetime.now()
		data = tomorrow.strftime('%d/%m/%Y')
		q.execute(f"update list_bot set status = '–†–∞–±–æ—Ç–∞–µ—Ç' WHERE id = '{a[1]}'")
		connection.commit()
		q.execute(f"update list_bot set logi = '{data}' WHERE id = '{a[1]}'")
		connection.commit()
		cmd1d = f'systemctl enable {a[2]}'
		subprocess.Popen(cmd1d, shell=True)
		cmd = f'systemctl start {a[2]}'
		subprocess.Popen(cmd, shell=True)
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–±–æ—Ç '))	
		bot.send_message(call.message.chat.id, f'''‚úîÔ∏è –ì–æ—Ç–æ–≤–æ, –±–æ—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.''',parse_mode='HTML', reply_markup=keyboard)
			
	if a[0] == '–ü–æ–∏—Å–∫':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		msg = bot.send_message(call.message.chat.id, "<b>‚úçÔ∏è –£–∫–∞–∂–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b>",parse_mode='HTML', reply_markup=keyboards.main)
		bot.register_next_step_handler(msg, poisk_user, a[1],msg.message_id)
		
	if a[0] == '–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å_':
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()

		q.execute(f"SELECT status FROM ugc_users where id = '{a[2]}' and bot = '{a[1]}'")
		status = q.fetchone()[0]

		if status == '–ê–∫—Ç–∏–≤–µ–Ω':
			q.execute(f"update ugc_users set status = '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' where id = '{a[2]}' and bot = '{a[1]}'")
			connection.commit()
			bot.answer_callback_query(callback_query_id=call.id, text="‚úÖ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
		else:
			q.execute(f"update ugc_users set status = '–ê–∫—Ç–∏–≤–µ–Ω' where id = '{a[2]}' and bot = '{a[1]}'")
			connection.commit()
			bot.answer_callback_query(callback_query_id=call.id, text="‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")



	if a[0] == '–£–¥–∞–ª–∏—Ç—å–±–æ—Ç':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		keyboard = types.InlineKeyboardMarkup()
		q.execute(f"DELETE FROM list_bot where id = '{a[1]}'")
		connection.commit()
		path = os.path.join('/etc/systemd/system/', f'{a[2]}.service')
		os.remove(path)
		shutil.rmtree(f'/root/smm/bot_list/{a[2]}')
		cmd = f'systemctl stop {a[2]}'
		subprocess.Popen(cmd, shell=True)
		cmd1d = f'systemctl disable {a[2]}'
		subprocess.Popen(cmd1d, shell=True)
		cmds = f'systemctl daemon-reload'
		subprocess.Popen(cmds, shell=True)
		keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–±–æ—Ç '))	
		bot.send_message(call.message.chat.id, f'''‚úîÔ∏è –ì–æ—Ç–æ–≤–æ''',parse_mode='HTML', reply_markup=keyboard)

	if a[0] == '–ù–∞—Å—Ç—Ä–æ–π–∫–∏':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute(f"SELECT * FROM list_bot where bot = '{a[1]}'")
		rowsa = q.fetchone()
		print(rowsa[13])
		if rowsa[13] == 1:
			statussms = '–†–∞–±–æ—Ç–∞–µ—Ç'
			knopkasms = 'üî¥ –í—ã–∫–ª—é—á–∏—Ç—å —Å–º—Å'
		else:
			knopkasms = 'üü¢ –í–∫–ª—é—á–∏—Ç—å —Å–º—Å'
			statussms = '–í—ã–∫–ª—é—á–µ–Ω'

		try:
			q.execute(f'SELECT chanel_id FROM chanel WHERE bot = "{rowsa[6]}"')
			chanel_id = q.fetchone()
			if chanel_id != None:
				chanel_id = chanel_id[0]
			else:
				chanel_id = '–ù–µ—Ç'
		except Exception as e:
			chanel_id = '–ù–µ—Ç'
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'üåÄ –°–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å' ,callback_data=f'—Å—Ç–∞—Ç—É—Å–±–æ—Ç {rowsa[0]}'),types.InlineKeyboardButton(text='üóë –£–¥–∞–ª–∏—Ç—å –±–æ—Ç',callback_data=f'–£–¥–∞–ª–∏—Ç—å–±–æ—Ç {rowsa[0]} {a[1]}'))
		#keyboard.add(types.InlineKeyboardButton(text=knopkasms,callback_data=f'—Å—Ç–∞—Ç—É—Å—Å–º—Å {rowsa[0]}'))
		keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–±–æ—Ç '))	
		bot.send_message(call.message.chat.id, f'''<b>üìà –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
<b>‚îú–†–µ–∂–∏–º —Å–º—Å:</b> <code>{statussms}</code> <b>–í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ</b>
<b>‚îî–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:</b> <code>{rowsa[8]}</code>''',parse_mode='HTML', reply_markup=keyboard)

	if a[0] == '–î–æ–±–∞–≤–∏—Ç—å–∫–∞–Ω–∞–ª':
		bot_name = bot.get_me().username
		bot.delete_message(call.message.chat.id,call.message.message_id)
		msg = bot.send_message(call.message.chat.id, f'''<b>üìú –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é:</b>

1Ô∏è‚É£ –î–æ–±–∞–≤—å—Ç–µ @{bot_name} –≤ –Ω—É–∂–Ω—ã–π –∫–∞–Ω–∞–ª–∞ –∏ –≤—ã–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∞:
<b>‚îú</b> –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –∫–∞–Ω–∞–ª–∞.
<b>‚îî</b> –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.

2Ô∏è‚É£ –ü–µ—Ä–µ—à–ª–∏—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞–Ω–∞–ª–∞:''',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, addchanels, a[1],msg.message_id)

	if a[0] == '—Å—Ç–∞—Ç—É—Å—Å–º—Å':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute(f"SELECT * FROM list_bot where id = '{a[1]}'")
		rows = q.fetchone()
		if rows[13] == 1:
			q.execute(f"update list_bot set sms_status = '0' where id = '{a[1]}'")
			connection.commit()

		else:
			q.execute(f"update list_bot set sms_status = '1' where id = '{a[1]}'")
			connection.commit()
		keyboard = types.InlineKeyboardMarkup()	
		keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–±–æ—Ç '))	
		bot.send_message(call.message.chat.id, f'''‚úîÔ∏è –ì–æ—Ç–æ–≤–æ''',parse_mode='HTML', reply_markup=keyboard)
			
	if a[0] == '—Å—Ç–∞—Ç—É—Å–±–æ—Ç':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute(f"SELECT * FROM list_bot where id = '{a[1]}'")
		rows = q.fetchone()
		if rows[8] == '–†–∞–±–æ—Ç–∞–µ—Ç':
			q.execute(f"update list_bot set status = '–í—ã–∫–ª—é—á–µ–Ω' where id = '{a[1]}'")
			connection.commit()
			cmd = f'systemctl stop {rows[6]}'
			subprocess.Popen(cmd, shell=True)
			cmd1d = f'systemctl disable {rows[6]}'
			subprocess.Popen(cmd1d, shell=True)

		if rows[8] == '–í—ã–∫–ª—é—á–µ–Ω':
			q.execute(f"update list_bot set status = '–†–∞–±–æ—Ç–∞–µ—Ç' where id = '{a[1]}'")
			connection.commit()
			cmd1d = f'systemctl enable {rows[6]}'
			subprocess.Popen(cmd1d, shell=True)
			cmd = f'systemctl start {rows[6]}'
			subprocess.Popen(cmd, shell=True)
		keyboard = types.InlineKeyboardMarkup()	
		keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–±–æ—Ç '))	
		bot.send_message(call.message.chat.id, f'''‚úîÔ∏è –ì–æ—Ç–æ–≤–æ''',parse_mode='HTML', reply_markup=keyboard)

	if a[0] == '–ù–∞—Ü–µ–Ω–∫–∞':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		print(a[1])
		if str(a[1]) == 'nakrutka':
			msg = bot.send_message(call.message.chat.id, "‚úçÔ∏è<b>–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–Ω—è—Ç—å —Ü–µ–Ω—É:</b>",parse_mode='HTML', reply_markup=keyboards.main)
			bot.register_next_step_handler(msg, edit_procent, a[2],msg.message_id)

		elif str(a[1]) == 'sms':
			msg = bot.send_message(call.message.chat.id, "‚úçÔ∏è<b>–ù–∞–ø–∏—à–∏—Ç–µ —Å—É–º–º—É –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–Ω—è—Ç—å —Ü–µ–Ω—ã –Ω–∞ —Å–º—Å:</b>",parse_mode='HTML', reply_markup=keyboards.main)
			bot.register_next_step_handler(msg, edit_sms, a[2],msg.message_id)

		else:
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='üìà –ù–∞–∫—Ä—É—Ç–∫–∞',callback_data=f'–ù–∞—Ü–µ–Ω–∫–∞ nakrutka {a[1]}'),types.InlineKeyboardButton(text='üì± –°–º—Å',callback_data=f'–ù–∞—Ü–µ–Ω–∫–∞ sms {a[1]}'))
			keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–±–æ—Ç '))
			bot.send_message(call.message.chat.id, f'''–ì–¥–µ –±—É–¥–µ–º –º–µ–Ω—è—Ç—å –Ω–∞—Ü–µ–Ω–∫—É ?''',parse_mode='HTML', reply_markup=keyboard)
		
	if a[0] == 'add_bot':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute(f"SELECT COUNT(id) FROM list_bot where user = '{call.message.chat.id}'")
		botovcolvo = q.fetchone()[0]
		if int(botovcolvo) == 0:
			msg = bot.send_message(call.message.chat.id, '''–ß—Ç–æ–±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –±–æ—Ç, –≤–∞–º –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–≤–∞ –¥–µ–π—Å—Ç–≤–∏—è:

1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ @BotFather –∏ <a href="https://telegra.ph/Sozdat-bota-01-25">—Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –±–æ—Ç</a>.
2. –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω (12345:6789ABCDEF) ‚Äî —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –≤ —ç—Ç–æ—Ç —á–∞—Ç.

–í–∞–∂–Ω–æ: –Ω–µ –ø–æ–¥–∫–ª—é—á–∞–π—Ç–µ –±–æ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥—Ä—É–≥–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏ (Controller Bot, —Ä–∞–∑–Ω—ã–µ CRM –∏ —Ç.–¥.)''',disable_web_page_preview = True,parse_mode='HTML', reply_markup=keyboards.otmena)
			bot.register_next_step_handler(msg, add_bot,msg.message_id)
		else:
			bot.send_message(call.message.chat.id, f'''<b>‚úñÔ∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —á–∏—Å–ª–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –±–æ—Ç–æ–≤: 1</b>''',parse_mode='HTML', reply_markup=keyboards.main)
	
	if a[0] == '–∑–∞–∫–∞–∑—ã':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute(f'SELECT * FROM list_zakaz WHERE bot = "{a[1]}" ORDER BY id DESC LIMIT 5')
		row = q.fetchall()
		text = ''
		for i in row:
			text += f'''
<b>üìÑ ID:</b> <code>{i[7]}</code>
<b>‚îú–£—Å–ª—É–≥–∞:</b> <code>{i[5]}</code>
<b>‚îúURL:</b> <code>{i[2]}</code>
<b>‚îî–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</b> <code>{i[3]}</code>\n'''
		keyboard = types.InlineKeyboardMarkup()	
		keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–±–æ—Ç '))	
		bot.send_message(call.message.chat.id, f'''<b>üìà –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã:</b>
{text}''',parse_mode='HTML',reply_markup=keyboard)
		
	if a[0] == '–û—Ç–≤–µ—Ç–∏—Ç—å':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		msg = bot.send_message(call.message.chat.id, f'''‚úçÔ∏è –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å:''',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, support_otvet, a[1],msg.message_id)

	if a[0] == '–ü–µ—Ä–µ–¥–∞—Ç—å':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute(f"update support set status = '2' where id = '{a[1]}'")
		connection.commit()
		keyboard = types.InlineKeyboardMarkup()	
		keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–±–æ—Ç '))	
		bot.send_message(call.message.chat.id, f'''‚úîÔ∏è –ì–æ—Ç–æ–≤–æ, –≤–æ–ø—Ä–æ—Å –ø–µ—Ä–µ–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.''',parse_mode='HTML', reply_markup=keyboard)
			

	if a[0] == '–ü–æ–¥–¥–µ—Ä–∂–∫–∞':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute(f"SELECT * FROM support where bot = '{a[1]}' and status = '1' ORDER BY id DESC LIMIT 1")
		rows = q.fetchone()
		if rows != None:
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text='üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å',callback_data=f'–û—Ç–≤–µ—Ç–∏—Ç—å {rows[0]}'),types.InlineKeyboardButton(text='‚ÜóÔ∏è –ü–µ—Ä–µ–¥–∞—Ç—å –∞–¥–º–∏–Ω—É',callback_data=f'–ü–µ—Ä–µ–¥–∞—Ç—å {rows[0]}'))
			keyboard.add(types.InlineKeyboardButton(text=f'üìú –ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤',callback_data=f'–ò—Å—Ç–æ—Ä–∏—è {rows[1]} {a[1]}'))
			keyboard.add(types.InlineKeyboardButton(text=f'‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–±–æ—Ç '))
			bot.send_message(call.message.chat.id, f'''<b>‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> <code>{rows[1]}</code>
<b>‚îî–í–æ–ø—Ä–æ—Å:</b> <code>{rows[2]}</code>''',parse_mode='HTML', reply_markup=keyboard)
		else:
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text=f'‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–±–æ—Ç '))
			bot.send_message(call.message.chat.id, f'''üòä –ó–∞–ø—Ä–æ—Å—ã –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.''',parse_mode='HTML', reply_markup=keyboard)

	if a[0] == '–ò—Å—Ç–æ—Ä–∏—è':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute(f"SELECT * FROM support where user = '{a[1]}'")
		row = q.fetchall()
		text = ''
		for i in row:
			text += f'<b>‚îú‚ñ™Ô∏è:</b> <code>{i[2]}</code>\n'

		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–ü–æ–¥–¥–µ—Ä–∂–∫–∞ {a[2]}'))
		bot.send_message(call.message.chat.id, f'''<b>‚ÑπÔ∏è –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b>
{text}<b>‚îî–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</b> <code>{len(row)}</code>''',parse_mode='HTML', reply_markup=keyboard)

	if a[0] == 'awhat_oplata':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'''‚ñ™Ô∏è Qiwi\CARD''',callback_data='add_depozit2'))
		keyboard.add(types.InlineKeyboardButton(text=f'''‚ñ™Ô∏è LZT market''',callback_data='add_depozit'),types.InlineKeyboardButton(text=f'''‚ñ™Ô∏è Crypto''',callback_data='add_depozit'))
		keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–ö–∞–±–∏–Ω–µ—Ç '))
		bot.send_message(call.message.chat.id, f'''üì• –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:''',parse_mode='HTML', reply_markup=keyboard)
	
	if a[0] == 'add_depozit':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id,'''‚úçÔ∏è –£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:''', parse_mode='HTML')
		bot.register_next_step_handler(msg, btc_oplata_1)

	if a[0] == 'add_depozit2':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg = bot.send_message(call.message.chat.id,'''‚úçÔ∏è –£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:''', parse_mode='HTML')
		bot.register_next_step_handler(msg, btc_oplata_2)
	
	if a[0] == '–ö–∞–±–∏–Ω–µ—Ç':
			bot_name = 'EasyBotsFranchise_bot'
			bot.delete_message(call.message.chat.id,call.message.message_id)
			connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
			q = connection.cursor()
			q.execute(f"SELECT COUNT(id) FROM list_bot where user = '{call.message.chat.id}'")
			botov = q.fetchone()[0]

			q.execute(f"SELECT SUM(dohod) FROM list_bot where user = '{call.message.chat.id}'")
			dohod = q.fetchone()[0]
			print(dohod)
			if dohod == None:
				dohod = 0
			q.execute(f"SELECT SUM(balance) FROM list_bot where user = '{call.message.chat.id}'")
			balance = q.fetchone()[0]
			if balance == None:
				balance = 0
			print(balance)
			q.execute(f'SELECT * FROM ugc_users WHERE id = "{call.message.chat.id}" and bot = "{bot_name}"')
			rowsss = q.fetchone()
			keyboard = types.InlineKeyboardMarkup()	
			keyboard.add(types.InlineKeyboardButton(text='üì§ –í—ã–≤–µ—Å—Ç–∏',callback_data=f'–í—ã–≤–æ–¥ '),types.InlineKeyboardButton(text='üì• –ü–æ–ø–æ–ª–Ω–∏—Ç—å',callback_data=f'awhat_oplata'))		
			keyboard.add(types.InlineKeyboardButton(text='üéÅ –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–æ',callback_data=f'–ü—Ä–æ–º–æ '))
			keyboard.add(types.InlineKeyboardButton(text='ü´Ç –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞',callback_data=f'–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è '))		
			bot.send_message(call.message.chat.id, f'''<b>üé© –õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</b>
<b>‚îúID:</b> <code>{call.message.chat.id}</code>
<b>‚îúUN:</b> <code>{call.message.chat.username}</code>
<b>‚îú–ë–∞–ª–∞–Ω—Å:</b> <code>{rowsss[6]} RUB</code>
<b>‚îî–ë–æ—Ç–æ–≤:</b> <code>{botov}</code>

<b>ü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –±–æ—Ç–∞–º:
‚îú–î–æ—Ö–æ–¥:</b> <code>{dohod} RUB</code>
<b>‚îî–ë–∞–ª–∞–Ω—Å:</b> <code>{balance} RUB</code>''',parse_mode='HTML', reply_markup=keyboard)

	if a[0] == '–¢–æ–ø–±–æ—Ç–æ–≤':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		text = f"<b>üèÜ–¢–æ–ø –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –ø–æ –¥–æ—Ö–æ–¥—É:\n</b>"
		q.execute(f'SELECT * FROM list_bot ORDER BY dohod DESC')
		rows = q.fetchall()
		premium = ['ü•á', 'ü•à', 'ü•â', 'üèÖ', 'üèÖ']
		l = len(rows)
		if l > 5:
			l = 5
		for i in range(l):
			if i <= len(premium)-1:
				userid = int(rows[i][0])
				text += f"{premium[i]}{i+1}) @{rows[i][6]} | {rows[i][10]} RUB\n"
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'–ö–∞–±–∏–Ω–µ—Ç'))
		bot.send_message(call.message.chat.id, f'''{text}''',parse_mode='HTML', reply_markup=keyboard)

	if a[0] == '–í—ã–≤–æ–¥':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute(f"SELECT * FROM list_bot where user = '{call.message.chat.id}'")
		list_bot = q.fetchall()
		keyboard = types.InlineKeyboardMarkup()
		for i in list_bot:
			keyboard.add(types.InlineKeyboardButton(text=f'{i[2]} | {i[3]} RUB',callback_data=f'–í—ã–≤–µ—Å—Ç–∏ {i[6]}'))
		keyboard.add(types.InlineKeyboardButton(text=f'–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –±–∞–ª–∞–Ω—Å',callback_data=f'–í—ã–≤–µ—Å—Ç–∏ referal'))
		bot.send_message(call.message.chat.id, f'''<b>üì§  –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤:
‚îî–í—ã–±–µ—Ä–∏—Ç–µ –±–æ—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞:</b>''',parse_mode='HTML', reply_markup=keyboard)

	if a[0] == '–ü—Ä–æ–º–æ':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		q.execute(f"SELECT * FROM list_bot where user = '{call.message.chat.id}'")
		list_bot = q.fetchall()
		keyboard = types.InlineKeyboardMarkup()
		for i in list_bot:
			keyboard.add(types.InlineKeyboardButton(text=f'{i[2]} | {i[3]} RUB',callback_data=f'–ü—Ä–æ–º–æ–∫–æ–¥ {i[6]}'))
		keyboard.add(types.InlineKeyboardButton(text=f'–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –±–∞–ª–∞–Ω—Å',callback_data=f'–ü—Ä–æ–º–æ–∫–æ–¥ referal'))	
		bot.send_message(call.message.chat.id, f'''<b>üéÅ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞:
‚îî–í—ã–±–µ—Ä–∏—Ç–µ –±–æ—Ç –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:</b>''',parse_mode='HTML', reply_markup=keyboard)

	if a[0] == '–ü—Ä–æ–º–æ–∫–æ–¥':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		msg = bot.send_message(call.message.chat.id, f'''‚úçÔ∏è <b>–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –ø—Ä–æ–º–æ–∫–æ–¥–∞:</b>''',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, addpromo, a[1])
			
	if a[0] == '–í—ã–≤–µ—Å—Ç–∏':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='ü•ù QIWI',callback_data=f'–†–µ–∫–≤–∏–∑–∏—Ç—ã–≤—ã–≤–æ–¥ {a[1]} QIWI'),types.InlineKeyboardButton(text='üí≥ CARD',callback_data=f'–†–µ–∫–≤–∏–∑–∏—Ç—ã–≤—ã–≤–æ–¥ {a[1]} CARD'))
		keyboard.add(types.InlineKeyboardButton(text=f'‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'üíº –ü—Ä–æ—Ñ–∏–ª—å'))
		bot.send_message(call.message.chat.id, '''<b>üìú –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
‚îúQiwi: <code>–ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ</code> –æ—Ç 10 RUB
‚îúCard: <code>–ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ</code> –æ—Ç 200 RUB
‚îú–ÆMoney: <code>–ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ</code> –æ—Ç 50 RUB
‚îî–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É:</b>''',parse_mode='HTML', reply_markup=keyboard)


	if a[0] == '–†–µ–∫–≤–∏–∑–∏—Ç—ã–≤—ã–≤–æ–¥':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		msg = bot.send_message(call.message.chat.id, f'''‚úçÔ∏è <b>–£–∫–∞–∂–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã {a[2]}:</b>''',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, vivod, a[2], a[1],msg.message_id)

	if a[0] == 'support':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		msg = bot.send_message(call.message.chat.id, f'''<b>üÜò –í–Ω–∏–º–∞–Ω–∏–µ:
‚îú</b><i>–ò–Ω–æ–≥–¥–∞ –æ—Ç–≤–µ—Ç –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 6 —á–∞—Å–æ–≤, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–≥—Ä—É–∑–∫–∏.</i>
<b>‚îú</b><i>–° –≤–æ–ø—Ä–æ—Å–æ–º –æ –≤—ã–≤–æ–¥–µ —Å—Ä–µ–¥—Å—Ç–≤ –ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –Ω–µ—Ç —Å–º—ã—Å–ª–∞, —Ç–∞–∫ –∫–∞–∫ –≤—ã–≤–æ–¥ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–æ. –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ —É–∫–∞–∑–∞–Ω–∏–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–ª–Ω–æ–º–µ—Ä–Ω—ã–π –≤–æ–∑–≤—Ä–∞—Ç.</i>
<b>‚îî‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –Ω–∞–º:</b>''',parse_mode='HTML', reply_markup=keyboards.otmena)
		bot.register_next_step_handler(msg, supportadd, msg.message_id)		

	if a[0] == '–ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥':
		bot.delete_message(call.message.chat.id,call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_avtopost)	
		q = connection.cursor()
		q.execute(f"SELECT * FROM akk where user = '{call.message.chat.id}'")
		row = q.fetchall()
		keyboard = types.InlineKeyboardMarkup()
		for i in row:
			keyboard.add(types.InlineKeyboardButton(text=i[2],callback_data=f'—Å–ø–∏—Å–æ–∫ {i[0]}'))
		keyboard.add(types.InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç',url=f't.me/QAuth_BOT'))
		keyboard.add(types.InlineKeyboardButton(text=f'''ü™ß –ë–∞–∑–∞ —á–∞—Ç–æ–≤''',callback_data=f'–ë–∞–∑–∞—á–∞—Ç–æ–≤'))
		keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'–±–æ—Ç '))
		bot.send_message(call.from_user.id,  f'''‚ÑπÔ∏è <strong>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç ?
‚îî  –î</strong><em>–æ–±–∞–≤–ª—è–µ—Ç–µ –∞–∫–∫–∞—É–Ω—Ç, –ø–æ—Å–ª–µ  –≤–∞—à –ø–æ—Å—Ç –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å—Å—è <strong>–≤ –ª—é–±–æ–º —á–∞—Ç–µ</strong> —Å <strong> –ª—é–±—ã–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º –≤—Ä–µ–º–µ–Ω–∏</strong>, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —É–∫–∞–∂–µ—Ç–µ.</em>''',parse_mode='HTML', reply_markup=keyboard)

	if a[0] == '—Å–ø–∏—Å–æ–∫':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_avtopost)
		q = connection.cursor()
		q.execute(f'SELECT * FROM akk where id =  "{a[1]}"')
		akk_info = q.fetchone()
		keyboard = types.InlineKeyboardMarkup()
		q.execute(f"SELECT COUNT(chat) FROM list_chat where akkaunt = '{akk_info[2]}'")
		chats_count = q.fetchone()[0]
		q.execute(f"SELECT * FROM list_chat  where akkaunt = '{akk_info[2]}' ORDER BY id DESC LIMIT 30")
		rows = q.fetchall()
		btns = []
		for i in range(len(rows)):
			btns.append(types.InlineKeyboardButton(text=rows[i][3], callback_data=f'servis_ {rows[i][0]} {a[1]}'))
		while btns != []:
			try:
				keyboard.add(
					btns[0],
					btns[1]
					)
				del btns[1], btns[0]
			except:
				keyboard.add(btns[0])
				del btns[0]
		keyboard.add(types.InlineKeyboardButton(text=f'''üîÑ  –ó–∞–≥—Ä—É–∑–∏—Ç—å —á–∞—Ç—ã —Å –∞–∫–∫–∞—É–Ω—Ç–∞''',callback_data=f'loading_akk {akk_info[2]} {a[1]}'))
		keyboard.add(types.InlineKeyboardButton(text=f'''üåè –°–º–µ–Ω–∞ –ø—Ä–æ–∫—Å–∏''',callback_data=f'–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ proxy {a[1]}'),types.InlineKeyboardButton(text=f'''üóë –£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç''',callback_data=f'–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ delakk {a[1]}'))
		keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'–ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ '))
		bot.send_message(call.message.chat.id, f'''<b>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
<b>‚îú–ü—Ä–æ–∫—Å–∏:</b> <code>{akk_info[3]}</code>
<b>‚îî–ß–∞—Ç–æ–≤:</b> <code>{chats_count}</code>''',parse_mode='HTML', reply_markup=keyboard)

	if a[0] == 'loading_akk':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		bot.send_message(call.message.chat.id, f'üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–∂–∏–¥–∞–π—Ç–µ.',reply_markup=keyboards.main)
		status = chat_list.mains(a[1])
		if status == True:
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'—Å–ø–∏—Å–æ–∫ {a[2]}'))
			bot.send_message(call.message.chat.id, f'''‚úîÔ∏è –ß–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.''',reply_markup=keyboard)
		else:
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'—Å–ø–∏—Å–æ–∫ {a[2]}'))
			bot.send_message(call.message.chat.id, f'‚úñÔ∏è –û—à–∏–±–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ –∏–ª–∏ –ø—Ä–æ–∫—Å–∏.',reply_markup=keyboard)	
	
	if a[0] == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å':
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_avtopost)
		q = connection.cursor()
		q.execute(f"update list_chat set status = 'Send' where id = '{a[1]}'")
		connection.commit()
		bot.answer_callback_query(callback_query_id=call.id,show_alert=True, text="‚è≥ –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤ –æ—á–µ—Ä–µ–¥—å –∏ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–π –º–∏–Ω—É—Ç—ã !")

		
	if a[0] == 'servis_':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_avtopost)
		q = connection.cursor()
		q.execute(f"SELECT * FROM list_chat where id = '{a[1]}'")
		row = q.fetchone()
		date = datetime.today()
		date= date.strftime("%H:%M")
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='üìù –°–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç',callback_data=f'–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ text {a[1]} {a[2]}'))
		keyboard.add(types.InlineKeyboardButton(text='üåÖ –°–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ',callback_data=f'–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ photo {a[1]} {a[2]}'),types.InlineKeyboardButton(text='‚è± –°–º–µ–Ω–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É',callback_data=f'–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ hold {a[1]} {a[2]}'))
		keyboard.add(types.InlineKeyboardButton(text='üí≠ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–µ–π—á–∞—Å',callback_data=f'–û—Ç–ø—Ä–∞–≤–∏—Ç—å {a[1]}'))
		keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'—Å–ø–∏—Å–æ–∫ {a[2]}'),types.InlineKeyboardButton(text='üóë –£–¥–∞–ª–∏—Ç—å',callback_data=f'–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ del {a[1]} {a[2]}'))
		bot.send_message(call.from_user.id,  f'''<b>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
<b>‚îúId:</b> <code>{row[2]}</code>
<b>‚îú–ù–∞–∑–≤–∞–Ω–∏–µ:</b> <code>{row[3]}</code>
<b>‚îú–¢–µ–∫—Å—Ç:</b> <code>{row[4]}</code>
<b>‚îú—Ñ–æ—Ç–æ:</b> <code>{row[5]}</code> (—Å—Å—ã–ª–∫–∞)
<b>‚îú–ó–∞–¥–µ—Ä–∂–∫–∞:</b> <code>{row[6]}</code> –º–∏–Ω—É—Ç
<b>‚îú–û—Ç–ø—Ä–∞–≤–∫–∞:</b> <code>{row[7]}</code>
<b>‚îî–¢–µ–∫—É—â–∏–µ –≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞:</b> <code>{date}</code>''',parse_mode='HTML', reply_markup=keyboard)

	if a[0] == '–ë–∞–∑–∞—á–∞—Ç–æ–≤':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'–ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥'))
		doc = open('chat.rar', 'rb')
		bot.send_document(call.message.chat.id, doc, caption='‚úîÔ∏è –°–ø–∞—Å–∏–±–æ –∑–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —á–∞—Ç–æ–≤.', reply_markup=keyboard)
		
	if a[0] == '–Ω–∞—Å—Ç—Ä–æ–π–∫–∞':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_avtopost)
		q = connection.cursor()
		if str(a[1]) == 'text':
			msg= bot.send_message(call.message.chat.id, "‚úçÔ∏è –£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:",parse_mode='HTML')
			bot.register_next_step_handler(msg, new_data, a[1],a[2],a[3])
		if str(a[1]) == 'hold':
			msg= bot.send_message(call.message.chat.id, "‚úçÔ∏è –£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∑–∞–¥–µ—Ä–∂–∫–∏:",parse_mode='HTML')
			bot.register_next_step_handler(msg, new_data, a[1],a[2],a[3])
		if str(a[1]) == 'del':
			q.execute(f"DELETE FROM list_chat where id = '{a[2]}'")
			connection.commit()
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'—Å–ø–∏—Å–æ–∫ {a[3]}'))
			bot.send_message(call.from_user.id,  '''‚úîÔ∏è –ß–∞—Ç —É–¥–∞–ª–µ–Ω.''',parse_mode='HTML', reply_markup=keyboard)
		if str(a[1]) == 'photo':
			msg= bot.send_message(call.message.chat.id, "‚úçÔ∏è –£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ:",parse_mode='HTML')
			bot.register_next_step_handler(msg, new_data, a[1],a[2],a[3])

		if str(a[1]) == 'proxy':
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text=f'''üìú –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è''',url='https://telegra.ph/XA·ààVA--SMM-FRANCHISE--Navigaciya-po-menyu-04-15 '),types.InlineKeyboardButton(text=f'''‚ûï –ö—É–ø–∏—Ç—å –ø—Ä–æ–∫—Å–∏''',url='https://proxy.market/?ref=pm00038810'))
			msg = bot.send_message(call.message.chat.id,'''‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–∫—Å–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
‚îî <code>login:password@ip:port</code> (SOCKS)''',parse_mode='HTML', reply_markup=keyboard)
			bot.register_next_step_handler(msg, add_proxi, a[2],msg.message_id)

		if str(a[1]) == 'delakk':
			q.execute(f'SELECT name FROM akk where id = "{a[2]}"')
			akk_info = q.fetchone()[0]
			q.execute(f"DELETE FROM akk where id = '{a[2]}'")
			connection.commit()
			q.execute(f"DELETE FROM list_chat where akkaunt = '{akk_info}'")
			connection.commit()
			wwwww = f'+{akk_info}'
			q.execute(f"DELETE FROM list_chat where akkaunt = '{wwwww}'")
			connection.commit()
			try:
				path = os.path.join('/root/smm/sessions/', f'{akk_info}.session')
				os.remove(path)
				path = os.path.join('/root/smm/sessions/', f'{akk_info}.session-journal')
				os.remove(path)
			except Exception as e:
				pass
			keyboard = types.InlineKeyboardMarkup()
			keyboard.add(types.InlineKeyboardButton(text=f'''‚¨ÖÔ∏è –ù–∞–∑–∞–¥''',callback_data=f'–ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥'))
			bot.send_message(call.from_user.id,  '''‚úîÔ∏è –ê–∫–∫–∞—É–Ω—Ç —É–¥–∞–ª–µ–Ω.''',parse_mode='HTML', reply_markup=keyboard)

	if a[0] == '–ó–∞–∫—Ä—ã—Ç—å':
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)

	if a[0] == "–û—Å—Ç–∞–≤–∏—Ç—å–æ—Ç–∑—ã–≤":
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		msg= bot.send_message(call.message.chat.id, "<b>‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞:</b>",parse_mode='HTML')
		bot.register_next_step_handler(msg, reviews)
			
	if a[0] == '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è':		
		bot_name = 'EasyBotsFranchise_bot'
		bot.delete_message(chat_id=call.message.chat.id,message_id=call.message.message_id)
		connection = connect(host=config.bd_host,user=config.bd_login,password=config.bd_pass,database=config.bd_base)
		q = connection.cursor()
		bot_name = 'EasyBotsFranchise_bot'
		q.execute(f'SELECT COUNT(id) FROM ugc_users WHERE ref = "{call.message.chat.id}" and bot = "{bot_name}"')
		user_ref_count = q.fetchone()[0]
		q.execute(f'SELECT * FROM ugc_users WHERE id = "{call.message.chat.id}" and bot = "{bot_name}"')
		rowsss = q.fetchone()
		dohodref = rowsss[2]
		if rowsss[2] == None:
			dohodref = 0
		keyboard = types.InlineKeyboardMarkup()
		keyboard.add(types.InlineKeyboardButton(text='‚ùóÔ∏è –ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å ?!',url='https://telegra.ph/XA·ààVA--SMM-FRANCHISE--Navigaciya-po-menyu-04-15 '))
		keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',callback_data=f'–ö–∞–±–∏–Ω–µ—Ç '))
		bot.send_message(call.message.chat.id, f'''<b>ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b>
<b>‚îî–°—Å—ã–ª–∫–∞:</b> https://t.me/{bot_name}?start={call.message.chat.id}

<b>üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>
<b>‚îú–î–æ—Ö–æ–¥:</b> <code>{dohodref} RUB</code>
<b>‚îú–†–µ—Ñ–µ—Ä–∞–ª–æ–≤:</b> <code>{user_ref_count}</code>
<b>‚îú–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞:</b> <code>10%</code>
<b>‚îî</b><i>–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥ –≤ —Ä–∞–∑–º–µ—Ä–µ 10% –æ—Ç –≤—Å–µ—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤!</i>''',parse_mode='HTML',reply_markup=keyboard, disable_web_page_preview=True)

# try:
# 	bot.polling(True)
# except Exception as e:
# 	bot.send_message(1960177129, e)


bot.polling(True)